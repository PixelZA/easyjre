{"version":3,"sources":["platforms.ts","components/ChoosePlatformContainer.tsx","jdk-modules.ts","components/CopyPasteModulesContainer.tsx","components/CreateJREContainer.tsx","intentions.ts","components/JDKBinDirectoryPaper.tsx","components/MiscOptionsPaper.tsx","components/ManuallySpecifiedModulesPaper.tsx","components/ModulePathPaper.tsx","components/RootModulesPaper.tsx","components/CustomizeJREContainer.tsx","vendors.ts","components/DownloadJDKContainer.tsx","components/Footer.tsx","components/HeroContainer.tsx","components/IntentionContainer.tsx","components/TopBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MAC_OS","name","display","icon","listModulesCommand","WINDOWS","PLATFORMS","ChoosePlatformContainer","props","listItems","map","platform","index","react","ListItem","key","role","undefined","dense","button","onClick","event","_event","setPlatform","handleListItemClick","ListItemIcon","Radio","edge","checked","tabIndex","disableRipple","ListItemText","primary","Container","maxWidth","style","marginTop","marginBottom","Paper","padding","Typography","variant","List","STARTS_WITH_EXCLUSION","CopyPasteModulesContainer","enqueueSnackbar","useSnackbar","_React$useState","React","_React$useState2","Object","slicedToArray","pastedModulesList","setPastedModulesList","_React$useState3","_React$useState4","clipboardErrorOccurred","setClipboardErrorOccurred","navigatorClipboardSupported","navigator","clipboard","readText","parsePastedList","text","_parseJDKModules","modulesList","modules","split","strippedModules","jdkVersion","forEach","value","trim","indexOf","slice","push","excludedModules","filter","element","startsWith","sort","includedModules","parseJDKModules","_parseJDKModules2","setJdkVersion","setIncludedJDKModules","setExcludedJDKModules","length","pasteKeystroke","TextField","label","type","id","fullWidth","helperText","onChange","e","preventDefault","target","select","InputProps","startAdornment","InputAdornment","position","Icon","endAdornment","IconButton","aria-label","document","getElementById","execCommand","Box","justifyContent","margin","Button","color","then","catch","err","console","error","alert","alignItems","multiline","rows","rowsMax","concat","Chip","onDelete","includedJDKModules","excludedJDKModules","marginRight","CreateJREContainer","includedModulesString","join","optionAdditionalModules","manuallySpecifiedModules","moduleString","jreName","jreFolderName","toLowerCase","replace","outputCommandString","optionCompressionType","compressionLevel","optionExcludeHeaderFiles","headerFilesExcluded","optionExcludeManPages","manPagesExcluded","optionBindServices","bindServicesEnabled","optionJdkBinPath","jdkBinPath","optionModulePath","modulePath","compressionOptionString","excludeHeaderFilesOptionString","excludeManPagesOptionString","bindServicesOptionString","modulePathOptionString","slash","jlinkCommand","handleClickCopyJlinkCommand","component","align","gutterBottom","mt","mr","STANDARD_JAVA_SE","CHOOSE_JDK_MODULES","MANUAL_MODULES","INTENTIONS","JdkBinPathPaper","setJdkBinPath","placeholder","MiscOptionsPaper","FormControl","InputLabel","htmlFor","Select","setCompressionLevel","parseInt","inputProps","MenuItem","Divider","FormControlLabel","control","Checkbox","setHeaderFilesExcluded","setManPagesExcluded","setBindServicesEnabled","ManuallySpecifiedModulesPaper","setManuallySpecifiedModules","ModulePathPaper","setModulePath","useStyles","makeStyles","theme","root","cardHeader","spacing","list","width","height","backgroundColor","palette","background","paper","overflow","not","a","b","intersection","RootModulesPaper","classes","setChecked","_ref","left","setLeft","_ref2","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","toConsumableArray","splice","numberOfChecked","items","handleToggleAll","customList","title","Card","CardHeader","className","avatar","indeterminate","disabled","subheader","hasModules","intention","Grid","container","justify","item","direction","size","CustomizeJREContainer","VENDORS","organization","product","jdkDownloadLink","DownloadJDKContainer","selectedVendorIndex","setSelectedVendorIndex","selectItems","vendor","selectedVendor","handleMenuItemClick","href","linkStyle","fontWeight","Footer","paddingTop","paddingBottom","textAlign","Link","HeroContainer","paragraph","IntentionContainer","setIntention","TopBar","AppBar","Toolbar","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","noWrap","flexGrow","marginLeft","data-icon","data-size","data-show-count","App","useState","_React$useState5","_React$useState6","_React$useState7","_React$useState8","_React$useState9","_React$useState10","_React$useState11","_React$useState12","_React$useState13","_React$useState14","_React$useState15","_React$useState16","_React$useState17","_React$useState18","_React$useState19","_React$useState20","_React$useState21","_React$useState22","_React$useState23","_React$useState24","react_default","createElement","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","build","autoHideDuration","anchorOrigin","horizontal","vertical","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.039a37f1.chunk.js","sourcesContent":["export interface IPlatform {\r\n  name: string;\r\n  display: string;\r\n  icon: string;\r\n  listModulesCommand: string;\r\n}\r\n\r\nexport const MAC_OS: IPlatform = {\r\n  name: \"mac-os\",\r\n  display: \"macOS\",\r\n  icon: \"laptop_mac\",\r\n  listModulesCommand: \"./java --list-modules | pbcopy\"\r\n};\r\nexport const WINDOWS: IPlatform = {\r\n  name: \"windows\",\r\n  display: \"Windows\",\r\n  icon: \"laptop_windows\",\r\n  listModulesCommand: \".\\\\java --list-modules | clip\"\r\n};\r\nexport const LINUX: IPlatform = {\r\n  name: \"linux\",\r\n  display: \"Linux\",\r\n  icon: \"laptop\",\r\n  listModulesCommand: \"./java --list-modules | xclip\"\r\n};\r\nexport const WSL: IPlatform = {\r\n  name: \"wsl\",\r\n  display: \"Windows Subsystem for Linux (WSL)\",\r\n  icon: \"laptop\",\r\n  listModulesCommand: \"./java --list-modules | clip.exe\"\r\n};\r\n\r\nconst PLATFORMS = [MAC_OS, WINDOWS, LINUX, WSL];\r\nexport default PLATFORMS;\r\n","import {\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  Radio,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport PLATFORMS, { IPlatform } from \"../platforms\";\r\n\r\nexport interface IChoosePlatformContainerProps {\r\n  maxWidth: false | \"md\" | \"xs\" | \"sm\" | \"lg\" | \"xl\" | undefined;\r\n  platform: IPlatform;\r\n  setPlatform: React.Dispatch<React.SetStateAction<IPlatform>>;\r\n}\r\n\r\nexport default function ChoosePlatformContainer(\r\n  props: IChoosePlatformContainerProps\r\n) {\r\n  const handleListItemClick = (\r\n    _event: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    index: number\r\n  ) => {\r\n    props.setPlatform(PLATFORMS[index]);\r\n  };\r\n\r\n  const listItems: JSX.Element[] = PLATFORMS.map(\r\n    (platform: IPlatform, index: number) => {\r\n      return (\r\n        <ListItem\r\n          key={index}\r\n          role={undefined}\r\n          dense\r\n          button\r\n          onClick={(event: React.MouseEvent<HTMLDivElement, MouseEvent>) =>\r\n            handleListItemClick(event, index)\r\n          }\r\n        >\r\n          <ListItemIcon>\r\n            <Radio\r\n              edge=\"start\"\r\n              checked={props.platform.name === platform.name}\r\n              tabIndex={-1}\r\n              disableRipple\r\n            />\r\n          </ListItemIcon>\r\n          <ListItemText primary={platform.display} />\r\n        </ListItem>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={props.maxWidth}\r\n      style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\r\n    >\r\n      <Paper style={{ padding: \"2rem\" }}>\r\n        <Typography variant=\"h6\">Which platform are you using?</Typography>\r\n        <List>{listItems}</List>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","const STARTS_WITH_EXCLUSION: string = \"jdk.\";\r\n\r\nexport default function parseJDKModules(\r\n  modulesList: string\r\n): [string | null, string[], string[]] {\r\n  let modules = modulesList.split(/\\r?\\n/);\r\n  let strippedModules: string[] = [];\r\n  let jdkVersion: string | null = null;\r\n  modules.forEach((value, index) => {\r\n    value = value.trim();\r\n    if (value !== \"\" && value.indexOf(\"@\") >= 0) {\r\n      jdkVersion = value.slice(value.indexOf(\"@\") + 1);\r\n      value = value.slice(0, value.indexOf(\"@\"));\r\n      strippedModules.push(value);\r\n    }\r\n  });\r\n\r\n  let excludedModules = strippedModules.filter(element => {\r\n    return element.startsWith(STARTS_WITH_EXCLUSION);\r\n  });\r\n  excludedModules.sort();\r\n\r\n  let includedModules = strippedModules.filter(element => {\r\n    return !element.startsWith(STARTS_WITH_EXCLUSION);\r\n  });\r\n  includedModules.sort();\r\n  return [jdkVersion, includedModules, excludedModules];\r\n}\r\n","import {\r\n  Box,\r\n  Chip,\r\n  Container,\r\n  Icon,\r\n  IconButton,\r\n  InputAdornment,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { IPlatform, MAC_OS } from \"../platforms\";\r\nimport parseJDKModules from \"../jdk-modules\";\r\n\r\nexport interface ICopyPasteModulesContainerProps {\r\n  maxWidth: false | \"md\" | \"xs\" | \"sm\" | \"lg\" | \"xl\" | undefined;\r\n  platform: IPlatform;\r\n  jdkVersion: string | null | undefined;\r\n  setJdkVersion: React.Dispatch<\r\n    React.SetStateAction<string | null | undefined>\r\n  >;\r\n  includedJDKModules: string[];\r\n  setIncludedJDKModules: React.Dispatch<React.SetStateAction<string[]>>;\r\n  excludedJDKModules: string[];\r\n  setExcludedJDKModules: React.Dispatch<React.SetStateAction<string[]>>;\r\n}\r\n\r\nexport default function CopyPasteModulesContainer(\r\n  props: ICopyPasteModulesContainerProps\r\n) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [pastedModulesList, setPastedModulesList] = React.useState(\"\");\r\n  const [clipboardErrorOccurred, setClipboardErrorOccurred] = React.useState(\r\n    false\r\n  );\r\n\r\n  const handleClickCopyListModulesCommand = () => {\r\n    let commandTextarea: any = document.getElementById(\"list-modules-command\");\r\n    commandTextarea.select();\r\n    document.execCommand(\"copy\");\r\n    enqueueSnackbar(\"✔️ Copied!\");\r\n  };\r\n\r\n  const navigatorClipboardSupported =\r\n    !clipboardErrorOccurred && !!navigator.clipboard && !!navigator.clipboard.readText;\r\n\r\n  const parsePastedList = (text: string) => {\r\n    const [jdkVersion, includedModules, excludedModules] = parseJDKModules(\r\n      text\r\n    );\r\n    if (!!jdkVersion) {\r\n      props.setJdkVersion(jdkVersion);\r\n      props.setIncludedJDKModules(includedModules);\r\n      props.setExcludedJDKModules(excludedModules);\r\n      enqueueSnackbar(\r\n        \"✔️ Added \" +\r\n          (includedModules.length + excludedModules.length) +\r\n          \" modules for JDK \" +\r\n          jdkVersion\r\n      );\r\n    } else {\r\n      enqueueSnackbar(\"❌️ Not a valid list of JDK modules.\");\r\n    }\r\n  };\r\n\r\n  const handleClickPaste = () => {\r\n    if (navigatorClipboardSupported) {\r\n      navigator.clipboard\r\n        .readText()\r\n        .then((text: string) => {\r\n          parsePastedList(text);\r\n        })\r\n        .catch(err => {\r\n          // This can happen if the user denies clipboard permissions:\r\n          console.error(\"Could not copy text: \", err);\r\n          setClipboardErrorOccurred(true);\r\n          enqueueSnackbar(\"❌️ Something went wrong. Paste into the text input.\");\r\n        });\r\n    } else {\r\n      alert(\r\n        \"Sorry, your browser doesn't support pasting.\\nSpecifically, there is no navigator.clipboard support.\\n\\nTry using Safari or Google Chrome.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const pasteKeystroke: string =\r\n    props.platform.name === MAC_OS.name ? \"⌘+V\" : \"Ctrl+V\";\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={props.maxWidth}\r\n      style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\r\n    >\r\n      <Paper style={{ padding: \"2rem\" }}>\r\n        <Typography variant=\"h6\">Copy your JDK module list:</Typography>\r\n        <p>\r\n          Copy a list of the available Java modules by running the following\r\n          command in the JDK bin folder:\r\n        </p>\r\n        <div>\r\n          <TextField\r\n            variant=\"filled\"\r\n            label={props.platform.display + \" command:\"}\r\n            type=\"text\"\r\n            id=\"list-modules-command\"\r\n            value={props.platform.listModulesCommand}\r\n            fullWidth\r\n            helperText=\"Be sure to run this in the Java JDK bin folder.\"\r\n            onChange={e => e.preventDefault()}\r\n            onClick={(e: any) => {\r\n              if (!!e.target.select) {\r\n                e.target.select();\r\n              }\r\n            }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Icon>{props.platform.icon}</Icon>\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"Toggle password visibility\"\r\n                    onClick={() => {\r\n                      handleClickCopyListModulesCommand();\r\n                    }}\r\n                  >\r\n                    <Icon>assignment</Icon>\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </div>\r\n        <Typography variant=\"h6\" style={{ marginTop: \"1.5rem\" }}>\r\n          Paste your JDK module list:\r\n        </Typography>\r\n        <p style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}>\r\n          After running the above command, paste the list of Java modules below:\r\n        </p>\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            margin: \"0.3rem\"\r\n          }}\r\n        >\r\n          {!props.jdkVersion && (\r\n            <>\r\n              {navigatorClipboardSupported && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => handleClickPaste()}\r\n                >\r\n                  Paste\r\n                </Button>\r\n              )}\r\n              {!navigatorClipboardSupported && (\r\n                <Box style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <TextField\r\n                    variant=\"filled\"\r\n                    label=\"JDK Modules List\"\r\n                    type=\"text\"\r\n                    multiline\r\n                    rows={1}\r\n                    rowsMax={1}\r\n                    id=\"list-modules-pasted\"\r\n                    value={pastedModulesList}\r\n                    //fullWidth\r\n                    helperText={`Paste your modules here using ${pasteKeystroke}.`}\r\n                    onChange={e => {\r\n                      if (e.target.value.length === 1) {\r\n                        setPastedModulesList(\"\");\r\n                        enqueueSnackbar(\r\n                          `❌️ Paste your modules here using ${pasteKeystroke}.`\r\n                        );\r\n                      } else {\r\n                        parsePastedList(e.target.value);\r\n                      }\r\n                    }}\r\n                  />\r\n                </Box>\r\n              )}\r\n              <Chip\r\n                icon={<Icon>not_interested</Icon>}\r\n                label=\"No JDK Root Modules\"\r\n              />\r\n            </>\r\n          )}\r\n          {props.jdkVersion && (\r\n            <>\r\n              <Chip\r\n                icon={<Icon>check</Icon>}\r\n                label={\"JDK \" + props.jdkVersion}\r\n                onDelete={() => {\r\n                  props.setJdkVersion(null);\r\n                  props.setIncludedJDKModules([]);\r\n                  props.setExcludedJDKModules([]);\r\n                }}\r\n                color=\"primary\"\r\n              />\r\n              <Chip\r\n                icon={<Icon>playlist_add_check</Icon>}\r\n                label={\r\n                  props.includedJDKModules.length +\r\n                  props.excludedJDKModules.length +\r\n                  \" JDK Root Modules\"\r\n                }\r\n                color=\"secondary\"\r\n                style={{ marginRight: \".5rem\" }}\r\n              />\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Icon,\r\n  IconButton,\r\n  InputAdornment,\r\n  Paper,\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport * as React from \"react\";\r\nimport { IPlatform, WINDOWS } from \"../platforms\";\r\n\r\nexport interface ICreateJREContainerProps {\r\n  maxWidth: false | \"md\" | \"xs\" | \"sm\" | \"lg\" | \"xl\" | undefined;\r\n  platform: IPlatform;\r\n  jdkVersion: string | null | undefined;\r\n  includedJDKModules: string[];\r\n  modulePath: string;\r\n  manuallySpecifiedModules: string;\r\n  jdkBinPath: string;\r\n  compressionLevel: number;\r\n  headerFilesExcluded: boolean;\r\n  manPagesExcluded: boolean;\r\n  bindServicesEnabled: boolean;\r\n}\r\n\r\nexport default function CreateJREContainer(props: ICreateJREContainerProps) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  let includedModulesString: string = props.includedJDKModules.join(\",\");\r\n  let optionAdditionalModules: string = props.manuallySpecifiedModules.trim();\r\n\r\n  let moduleString: string = \"\";\r\n\r\n  if (includedModulesString !== \"\" || optionAdditionalModules !== \"\") {\r\n    moduleString = \" --add-modules \";\r\n    if (includedModulesString !== \"\") {\r\n      moduleString += includedModulesString;\r\n    }\r\n    if (includedModulesString !== \"\" && optionAdditionalModules !== \"\") {\r\n      moduleString += \",\";\r\n    }\r\n    if (optionAdditionalModules !== \"\") {\r\n      moduleString += optionAdditionalModules;\r\n    }\r\n  }\r\n\r\n  let jreName: string = \"jre\";\r\n\r\n  let jdkVersion: string | null | undefined = props.jdkVersion;\r\n  if (!!jdkVersion) {\r\n    jreName += \"-\" + jdkVersion;\r\n  }\r\n\r\n  let jreFolderName: string = jreName.toLowerCase().replace(/[^a-z0-9.]/g, \"-\");\r\n\r\n  let outputCommandString: string = \"--output \" + jreFolderName;\r\n\r\n  // Options\r\n  let optionCompressionType: number = props.compressionLevel;\r\n  let optionExcludeHeaderFiles: boolean = props.headerFilesExcluded;\r\n  let optionExcludeManPages: boolean = props.manPagesExcluded;\r\n  let optionBindServices: boolean = props.bindServicesEnabled;\r\n  let optionJdkBinPath: string = props.jdkBinPath.trim();\r\n  let optionModulePath: string = props.modulePath.trim();\r\n\r\n  let compressionOptionString: string = \" --compress=\" + optionCompressionType;\r\n\r\n  let excludeHeaderFilesOptionString: string = \"\";\r\n  if (optionExcludeHeaderFiles) {\r\n    excludeHeaderFilesOptionString = \" --no-header-files\";\r\n  }\r\n\r\n  let excludeManPagesOptionString: string = \"\";\r\n  if (optionExcludeManPages) {\r\n    excludeManPagesOptionString = \" --no-man-pages\";\r\n  }\r\n\r\n  let bindServicesOptionString: string = \"\";\r\n  if (optionBindServices) {\r\n    bindServicesOptionString = \" --bind-services\";\r\n  }\r\n\r\n  let modulePathOptionString: string = \"\";\r\n  if (optionModulePath !== \"\") {\r\n    modulePathOptionString = \" --module-path \" + optionModulePath;\r\n  }\r\n\r\n  let slash: string = props.platform.name === WINDOWS.name ? \"\\\\\" : \"/\";\r\n  const jlinkCommand: string =\r\n    optionJdkBinPath +\r\n    (optionJdkBinPath ? slash : \"\") +\r\n    \"jlink \" +\r\n    outputCommandString +\r\n    compressionOptionString +\r\n    excludeHeaderFilesOptionString +\r\n    excludeManPagesOptionString +\r\n    bindServicesOptionString +\r\n    modulePathOptionString +\r\n    moduleString;\r\n\r\n  const handleClickCopyJlinkCommand = () => {\r\n    let commandTextarea: any = document.getElementById(\"jlink-command\");\r\n    commandTextarea.select();\r\n    document.execCommand(\"copy\");\r\n    enqueueSnackbar(\"✔️ Copied!\");\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={props.maxWidth}\r\n      style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\r\n    >\r\n      <Typography\r\n        component=\"h2\"\r\n        variant=\"h4\"\r\n        align=\"center\"\r\n        color=\"textPrimary\"\r\n        gutterBottom\r\n        style={{ marginTop: \"2rem\" }}\r\n      >\r\n        Create Your JRE\r\n      </Typography>\r\n      <Paper style={{ padding: \"2rem\" }}>\r\n        <Typography variant=\"h6\" style={{ marginBottom: \"1rem\" }}>\r\n          Run <code>jlink</code> To Create Your JRE\r\n        </Typography>\r\n\r\n        {!moduleString && (\r\n          <Box style={{ display: \"flex\", alignItems: \"flex-start\" }}>\r\n            <Box mt={1.5} mr={2}>\r\n              <Icon color=\"secondary\">warning</Icon>\r\n            </Box>\r\n            <p>\r\n              You have no modules. Add some modules using the sections above.\r\n            </p>\r\n          </Box>\r\n        )}\r\n        {moduleString && (\r\n          <>\r\n            <p>\r\n              Copy and run the <code>jlink</code> command below\r\n              {props.jdkBinPath === \".\" && (\r\n                <span>\r\n                  {\" \"}\r\n                  in the <code>bin</code> directory of the JDK\r\n                </span>\r\n              )}\r\n              :\r\n            </p>\r\n\r\n            <div>\r\n              <TextField\r\n                variant=\"filled\"\r\n                label={props.platform.display + \" command:\"}\r\n                type=\"text\"\r\n                id=\"jlink-command\"\r\n                multiline={true}\r\n                value={jlinkCommand}\r\n                fullWidth\r\n                helperText={\r\n                  (props.jdkBinPath === \".\" ? \"Run this in bin. \" : \"\") +\r\n                  \"This creates your \" +\r\n                  jreFolderName +\r\n                  \" directory. Be sure you have the proper write privileges!\"\r\n                }\r\n                onChange={e => e.preventDefault()}\r\n                onClick={(e: any) => {\r\n                  if (!!e.target.select) {\r\n                    e.target.select();\r\n                  }\r\n                }}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Icon>{props.platform.icon}</Icon>\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"Toggle password visibility\"\r\n                        onClick={() => {\r\n                          handleClickCopyJlinkCommand();\r\n                        }}\r\n                      >\r\n                        <Icon>assignment</Icon>\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </div>\r\n            <Box style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  handleClickCopyJlinkCommand();\r\n                }}\r\n              >\r\n                Copy\r\n              </Button>\r\n            </Box>\r\n\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              style={{ marginTop: \"2rem\" }}\r\n            >\r\n              Your JRE will be created in the <code>{jreFolderName}</code>{\" \"}\r\n              directory. Enjoy! 🔥\r\n            </Typography>\r\n          </>\r\n        )}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","export interface IIntention {\r\n  name: string;\r\n  display: string;\r\n}\r\n\r\nexport const STANDARD_JAVA_SE: IIntention = {\r\n  name: \"standard-java-se\",\r\n  display:\r\n    \"I just want a lightweight (~40-60 MB) standard Java SE JRE for a particular JDK. Quick and painless.\"\r\n};\r\nexport const CHOOSE_JDK_MODULES: IIntention = {\r\n  name: \"choose-jdk-modules\",\r\n  display:\r\n    \"Let me pick and choose from a list which JDK modules are included in my JRE.\"\r\n};\r\nexport const MANUAL_MODULES: IIntention = {\r\n  name: \"manual-modules\",\r\n  display:\r\n    \"I know exactly which modules I need to include in my JRE. I don't need to see a list.\"\r\n};\r\nexport const ALL_OPTIONS: IIntention = {\r\n  name: \"all-options\",\r\n  display: \"I want total control. Show me all the options!\"\r\n};\r\n\r\nconst INTENTIONS: IIntention[] = [\r\n  STANDARD_JAVA_SE,\r\n  CHOOSE_JDK_MODULES,\r\n  MANUAL_MODULES,\r\n  ALL_OPTIONS\r\n];\r\n\r\nexport default INTENTIONS;\r\n","import * as React from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Icon\r\n} from \"@material-ui/core\";\r\n\r\nexport interface IJdkBinPathPaperProps {\r\n  jdkBinPath: string;\r\n  setJdkBinPath: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport default function JdkBinPathPaper(props: IJdkBinPathPaperProps) {\r\n  return (\r\n    <Paper\r\n      style={{\r\n        padding: \"2rem\",\r\n        marginTop: \"1rem\",\r\n        marginBottom: \"1rem\"\r\n      }}\r\n    >\r\n      <Typography variant=\"h6\" style={{ marginBottom: \"1rem\" }}>\r\n        JDK Bin Path\r\n      </Typography>\r\n      <p>\r\n        Specify the path to the <code>bin</code> folder of your JDK. You can use\r\n        an environment variable here, but it's safer to execute{\" \"}\r\n        <code>jlink</code> directly from the JDK <code>bin</code> to prevent\r\n        using an incorrect JDK that might be on your <code>PATH</code>.\r\n      </p>\r\n      <p>\r\n        The safest way is to leave this as <code>.</code>, navigate to the{\" \"}\r\n        <code>bin</code> directory, and run the <code>jlink</code> command\r\n        copied from below. If you change this, be sure to also change the Module\r\n        Path above.\r\n      </p>\r\n      <div>\r\n        <TextField\r\n          variant=\"standard\"\r\n          label=\"JDK Bin Path\"\r\n          type=\"text\"\r\n          value={props.jdkBinPath}\r\n          fullWidth\r\n          helperText=\"Can be relative or absolute.\"\r\n          onClick={(e: any) => {\r\n            if (!!e.target.select) {\r\n              e.target.select();\r\n            }\r\n          }}\r\n          onChange={(e) => {\r\n            props.setJdkBinPath(e.target.value);\r\n          }}\r\n          placeholder=\"Enter the path to the bin folder\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton aria-label=\"Clear\" onClick={() => {props.setJdkBinPath(\"\")}}>\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import {\r\n  Checkbox,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\n\r\nexport interface IMiscOptionsPaperProps {\r\n  compressionLevel: number;\r\n  setCompressionLevel: React.Dispatch<React.SetStateAction<number>>;\r\n  headerFilesExcluded: boolean;\r\n  setHeaderFilesExcluded: React.Dispatch<React.SetStateAction<boolean>>;\r\n  manPagesExcluded: boolean;\r\n  setManPagesExcluded: React.Dispatch<React.SetStateAction<boolean>>;\r\n  bindServicesEnabled: boolean;\r\n  setBindServicesEnabled: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport default function MiscOptionsPaper(props: IMiscOptionsPaperProps) {\r\n  return (\r\n    <Paper\r\n      style={{\r\n        padding: \"2rem\",\r\n        marginTop: \"1rem\",\r\n        marginBottom: \"1rem\"\r\n      }}\r\n    >\r\n      <Typography variant=\"h6\" style={{ marginBottom: \"1rem\" }}>\r\n        Other Options\r\n      </Typography>\r\n      <Typography variant=\"subtitle2\">Compression</Typography>\r\n      <p>\r\n        Choose the level of compression. ZIP compression offers a significant\r\n        reduction in size with a small hit to class loading performance.\r\n      </p>\r\n      <div>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor=\"age-simple\">Compression Level</InputLabel>\r\n          <Select\r\n            value={props.compressionLevel}\r\n            onChange={e =>\r\n              props.setCompressionLevel(parseInt(e.target.value + \"\"))\r\n            }\r\n            inputProps={{\r\n              name: \"age\",\r\n              id: \"age-simple\"\r\n            }}\r\n          >\r\n            <MenuItem value={0}>No compression</MenuItem>\r\n            <MenuItem value={1}>Constant string sharing</MenuItem>\r\n            <MenuItem value={2}>ZIP</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <Divider style={{ marginTop: \"2rem\", marginBottom: \"1rem\" }} />\r\n      <Typography variant=\"subtitle2\" style={{ marginTop: \"1.5rem\" }}>\r\n        Header Files\r\n      </Typography>\r\n      <p>Whether or not to exclude header files from the JRE.</p>\r\n      <div>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={props.headerFilesExcluded}\r\n              onChange={e => props.setHeaderFilesExcluded(e.target.checked)}\r\n            />\r\n          }\r\n          label=\"Exclude Header Files\"\r\n        />\r\n      </div>\r\n      <Divider style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }} />\r\n      <Typography variant=\"subtitle2\" style={{ marginTop: \"1.5rem\" }}>\r\n        Man Pages\r\n      </Typography>\r\n      <p>Whether or not to exclude man pages from the JRE.</p>\r\n      <div>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={props.manPagesExcluded}\r\n              onChange={e => props.setManPagesExcluded(e.target.checked)}\r\n            />\r\n          }\r\n          label=\"Exclude Man Pages\"\r\n        />\r\n      </div>\r\n      <Divider style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }} />\r\n      <Typography variant=\"subtitle2\" style={{ marginTop: \"1.5rem\" }}>\r\n        Bind Services\r\n      </Typography>\r\n      <p>\r\n        Whether or not to link service provider modules and their dependencies.\r\n      </p>\r\n      <div>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={props.bindServicesEnabled}\r\n              onChange={e => props.setBindServicesEnabled(e.target.checked)}\r\n            />\r\n          }\r\n          label=\"Bind Services\"\r\n        />\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n  Icon,\r\n  TextField\r\n} from \"@material-ui/core\";\r\n\r\nexport interface IManuallySpecifiedModulesPaperProps {\r\n  manuallySpecifiedModules: string;\r\n  setManuallySpecifiedModules: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport default function ManuallySpecifiedModulesPaper(\r\n  props: IManuallySpecifiedModulesPaperProps\r\n) {\r\n  return (\r\n    <Paper\r\n      style={{\r\n        padding: \"2rem\",\r\n        marginTop: \"1rem\",\r\n        marginBottom: \"1rem\"\r\n      }}\r\n    >\r\n      <Typography variant=\"h6\" style={{ marginBottom: \"1rem\" }}>\r\n        Manually Specifed Modules\r\n      </Typography>\r\n      <p>\r\n        Specify any modules you'd like added here, such as your\r\n        custom ones. Comma-separate the values and don't use spaces.\r\n      </p>\r\n      <p>\r\n        You can specify root JDK modules (such as <code>java.base</code>) here\r\n        manually if you'd like, too.\r\n      </p>\r\n      <div>\r\n        <TextField\r\n          variant=\"standard\"\r\n          label=\"Manually Specified Modules\"\r\n          type=\"text\"\r\n          fullWidth\r\n          value={props.manuallySpecifiedModules}\r\n          helperText=\"Separate modules by commas. They should be found in one or more of your module paths (see previous section)\"\r\n          onClick={(e: any) => {\r\n            if (!!e.target.select) {\r\n              e.target.select();\r\n            }\r\n          }}\r\n          onChange={e => {\r\n            props.setManuallySpecifiedModules(e.target.value);\r\n          }}\r\n          placeholder=\"my.mod,other.mod,etc\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"Clear\"\r\n                  onClick={() => {\r\n                    props.setManuallySpecifiedModules(\"\");\r\n                  }}\r\n                >\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Icon\r\n} from \"@material-ui/core\";\r\n\r\nexport interface IModulePathPaperProps {\r\n  modulePath: string;\r\n  setModulePath: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport default function ModulePathPaper(props: IModulePathPaperProps) {\r\n  return (\r\n    <Paper\r\n      style={{\r\n        padding: \"2rem\",\r\n        marginTop: \"1rem\",\r\n        marginBottom: \"1rem\"\r\n      }}\r\n    >\r\n      <Typography variant=\"h6\" style={{ marginBottom: \"1rem\" }}>\r\n        Module Path\r\n      </Typography>\r\n      <p>\r\n        The module path is a semicolon-separated list of paths where{\" \"}\r\n        <code>jlink</code> will search for modules. They can be relative or\r\n        absolute, and can use environment variables.\r\n      </p>\r\n      <p>\r\n        The standard JDK modules are typically in the JDK directory{\" \"}\r\n        <code>jmods</code>. If you run <code>jlink</code> from <code>bin</code>,\r\n        then leaving this as <code>../jmods</code> will work just fine. You can\r\n        optionally add your own module paths after that, separated by a\r\n        semicolon.\r\n      </p>\r\n\r\n      <div>\r\n        <TextField\r\n          variant=\"standard\"\r\n          label=\"Module Path\"\r\n          type=\"text\"\r\n          value={props.modulePath}\r\n          fullWidth\r\n          helperText=\"Separate paths by semicolons.\"\r\n          placeholder=\"Specify a path to your modules\"\r\n          onClick={(e: any) => {\r\n            if (!!e.target.select) {\r\n              e.target.select();\r\n            }\r\n          }}\r\n          onChange={(e) => {\r\n            props.setModulePath(e.target.value);\r\n          }}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton aria-label=\"Clear\" onClick={() => {props.setModulePath(\"\")}}>\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Box, Icon, Paper, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport * as React from \"react\";\r\nimport { CHOOSE_JDK_MODULES, IIntention } from \"../intentions\";\r\n\r\nexport interface IRootModulesPaperProps {\r\n  intention: IIntention;\r\n  right: string[];\r\n  setRight: React.Dispatch<React.SetStateAction<string[]>>;\r\n  left: string[];\r\n  setLeft: React.Dispatch<React.SetStateAction<string[]>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: \"auto\"\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  list: {\r\n    width: 240,\r\n    height: 276,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: \"auto\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0)\r\n  }\r\n}));\r\n\r\nfunction not(a: string[], b: string[]) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a: string[], b: string[]) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a: string[], b: string[]) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function RootModulesPaper(props: IRootModulesPaperProps) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState<string[]>([]);\r\n  const [left, setLeft] = [props.left, props.setLeft];\r\n  const [right, setRight] = [props.right, props.setRight];\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value: string) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = (items: string[]) =>\r\n    intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items: string[]) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked).sort());\r\n    setLeft(not(left, leftChecked).sort());\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked).sort());\r\n    setRight(not(right, rightChecked).sort());\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const customList = (title: React.ReactNode, items: string[]) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={\r\n              numberOfChecked(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked(items) !== items.length &&\r\n              numberOfChecked(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List className={classes.list} dense>\r\n        {items.map((value: string) => (\r\n          <ListItem\r\n            key={value}\r\n            role={undefined}\r\n            button\r\n            onClick={handleToggle(value)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={-1}\r\n                disableRipple\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText primary={value} />\r\n          </ListItem>\r\n        ))}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  const hasModules = props.right.length + props.left.length > 0;\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        padding: \"2rem\",\r\n        marginTop: \"1rem\",\r\n        marginBottom: \"1rem\"\r\n      }}\r\n    >\r\n      <Typography variant=\"h6\" style={{ marginBottom: \"1rem\" }}>\r\n        JDK Root Modules\r\n      </Typography>\r\n      {!hasModules && (\r\n        <Box style={{ display: \"flex\", alignItems: \"flex-start\" }}>\r\n          <Box mt={1.5} mr={2}>\r\n            <Icon color=\"secondary\">warning</Icon>\r\n          </Box>\r\n          <p>\r\n            Paste your JDK modules above to customize which root modules are\r\n            included in the JRE.{\" \"}\r\n            {props.intention !== CHOOSE_JDK_MODULES && (\r\n              <span>Ignore this if you'd like to add them manually below.</span>\r\n            )}\r\n          </p>\r\n        </Box>\r\n      )}\r\n      {hasModules && (\r\n        <>\r\n          <p>\r\n            The JDK comes with many root modules which contain the JDK core\r\n            classes. The modules prefixed with <code>jdk.</code> are typically\r\n            not needed for a production JRE. Below, all non-JDK modules have\r\n            been included in the JRE. This will get you up and running quickly\r\n            without needing to use an entire JDK.\r\n          </p>\r\n          <p>\r\n            Feel free to include or exclude any modules you might or might not\r\n            need. For instance, you can use the <code>jdeps</code> command on\r\n            your Java classes to narrow down which modules you actually need to\r\n            include.\r\n          </p>\r\n          {props.intention !== CHOOSE_JDK_MODULES && (\r\n            <p>\r\n              See the Manually Specifed Modules section below for adding\r\n              additional modules (such as custom ones, or manually specifying\r\n              JDK ones) to the JRE.\r\n            </p>\r\n          )}\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.root}\r\n          >\r\n            <Grid item>{customList(\"Excluded From JRE\", left)}</Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  className={classes.button}\r\n                  onClick={handleCheckedRight}\r\n                  disabled={leftChecked.length === 0}\r\n                  aria-label=\"move selected right\"\r\n                >\r\n                  <Icon>chevron_right</Icon>\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  className={classes.button}\r\n                  onClick={handleCheckedLeft}\r\n                  disabled={rightChecked.length === 0}\r\n                  aria-label=\"move selected left\"\r\n                >\r\n                  <Icon>chevron_left</Icon>\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>{customList(\"Included In JRE\", right)}</Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","import { Container, Typography } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { CHOOSE_JDK_MODULES, IIntention, MANUAL_MODULES } from \"../intentions\";\r\nimport JdkBinPathPaper from \"./JDKBinDirectoryPaper\";\r\nimport MiscOptionsPaper from \"./MiscOptionsPaper\";\r\nimport ManuallySpecifiedModulesPaper from \"./ManuallySpecifiedModulesPaper\";\r\nimport ModulePathPaper from \"./ModulePathPaper\";\r\nimport RootModulesPaper from \"./RootModulesPaper\";\r\n\r\nexport interface ICustomizeJREContainerProps {\r\n  maxWidth: false | \"md\" | \"xs\" | \"sm\" | \"lg\" | \"xl\" | undefined;\r\n  intention: IIntention;\r\n  jdkVersion: string | null | undefined;\r\n  setJdkVersion: React.Dispatch<\r\n    React.SetStateAction<string | null | undefined>\r\n  >;\r\n  includedJDKModules: string[];\r\n  setIncludedJDKModules: React.Dispatch<React.SetStateAction<string[]>>;\r\n  excludedJDKModules: string[];\r\n  setExcludedJDKModules: React.Dispatch<React.SetStateAction<string[]>>;\r\n  modulePath: string;\r\n  setModulePath: React.Dispatch<React.SetStateAction<string>>;\r\n  manuallySpecifiedModules: string;\r\n  setManuallySpecifiedModules: React.Dispatch<React.SetStateAction<string>>;\r\n  jdkBinPath: string;\r\n  setJdkBinPath: React.Dispatch<React.SetStateAction<string>>;\r\n  compressionLevel: number;\r\n  setCompressionLevel: React.Dispatch<React.SetStateAction<number>>;\r\n  headerFilesExcluded: boolean;\r\n  setHeaderFilesExcluded: React.Dispatch<React.SetStateAction<boolean>>;\r\n  manPagesExcluded: boolean;\r\n  setManPagesExcluded: React.Dispatch<React.SetStateAction<boolean>>;\r\n  bindServicesEnabled: boolean;\r\n  setBindServicesEnabled: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport default function CustomizeJREContainer(\r\n  props: ICustomizeJREContainerProps\r\n) {\r\n  return (\r\n    <Container\r\n      maxWidth={props.maxWidth}\r\n      style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\r\n    >\r\n      <Typography\r\n        component=\"h2\"\r\n        variant=\"h4\"\r\n        align=\"center\"\r\n        color=\"textPrimary\"\r\n        gutterBottom\r\n        style={{ marginTop: \"2rem\" }}\r\n      >\r\n        Customize Your JRE\r\n      </Typography>\r\n      {props.intention !== MANUAL_MODULES && (\r\n        <RootModulesPaper\r\n          intention={props.intention}\r\n          right={props.includedJDKModules}\r\n          setRight={props.setIncludedJDKModules}\r\n          left={props.excludedJDKModules}\r\n          setLeft={props.setExcludedJDKModules}\r\n        />\r\n      )}\r\n      {props.intention !== CHOOSE_JDK_MODULES && (\r\n        <>\r\n          <ModulePathPaper\r\n            modulePath={props.modulePath}\r\n            setModulePath={props.setModulePath}\r\n          />\r\n          <ManuallySpecifiedModulesPaper\r\n            manuallySpecifiedModules={props.manuallySpecifiedModules}\r\n            setManuallySpecifiedModules={props.setManuallySpecifiedModules}\r\n          />\r\n        </>\r\n      )}\r\n      {props.intention !== CHOOSE_JDK_MODULES &&\r\n        props.intention !== MANUAL_MODULES && (\r\n          <>\r\n            <JdkBinPathPaper\r\n              jdkBinPath={props.jdkBinPath}\r\n              setJdkBinPath={props.setJdkBinPath}\r\n            />\r\n            <MiscOptionsPaper\r\n              compressionLevel={props.compressionLevel}\r\n              setCompressionLevel={props.setCompressionLevel}\r\n              headerFilesExcluded={props.headerFilesExcluded}\r\n              setHeaderFilesExcluded={props.setHeaderFilesExcluded}\r\n              manPagesExcluded={props.manPagesExcluded}\r\n              setManPagesExcluded={props.setManPagesExcluded}\r\n              bindServicesEnabled={props.bindServicesEnabled}\r\n              setBindServicesEnabled={props.setBindServicesEnabled}\r\n            />\r\n          </>\r\n        )}\r\n    </Container>\r\n  );\r\n}\r\n","export interface IVendor {\r\n  organization: string;\r\n  product: string;\r\n  jdkDownloadLink: string;\r\n}\r\n\r\nconst VENDORS: IVendor[] = [\r\n  {\r\n    organization: \"Oracle\",\r\n    product: \"HotSpot\",\r\n    jdkDownloadLink:\r\n      \"https://adoptopenjdk.net/releases.html?variant=openjdk11&jvmVariant=hotspot\"\r\n  },\r\n  {\r\n    organization: \"IBM/Eclipse\",\r\n    product: \"OpenJ9\",\r\n    jdkDownloadLink:\r\n      \"https://adoptopenjdk.net/releases.html?variant=openjdk11&jvmVariant=openj9\"\r\n  },\r\n  {\r\n    organization: \"Amazon\",\r\n    product: \"Corretto\",\r\n    jdkDownloadLink: \"https://aws.amazon.com/corretto/\"\r\n  }\r\n];\r\n\r\nexport default VENDORS;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport VENDORS, { IVendor } from \"../vendors\";\r\n\r\nexport interface IDownloadJDKContainerProps {\r\n  maxWidth: false | \"md\" | \"xs\" | \"sm\" | \"lg\" | \"xl\" | undefined;\r\n}\r\n\r\nexport default function DownloadJDKContainer(\r\n  props: IDownloadJDKContainerProps\r\n) {\r\n  const [selectedVendorIndex, setSelectedVendorIndex] = React.useState(0);\r\n\r\n  const handleMenuItemClick = (\r\n    e: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    const value: any = e.target.value;\r\n    if (typeof value !== \"undefined\") {\r\n      setSelectedVendorIndex(parseInt(value));\r\n    }\r\n  };\r\n\r\n  const selectItems: JSX.Element[] = VENDORS.map(\r\n    (vendor: IVendor, index: number) => {\r\n      return (\r\n        <MenuItem value={index} key={index}>\r\n          {vendor.organization} {vendor.product}\r\n        </MenuItem>\r\n      );\r\n    }\r\n  );\r\n\r\n  const selectedVendor = VENDORS[selectedVendorIndex];\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={props.maxWidth}\r\n      style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\r\n    >\r\n      <Paper style={{ padding: \"2rem\" }}>\r\n        <Typography variant=\"h6\">Download JDK</Typography>\r\n        <p>\r\n          If you haven't already, select, download, and unpack your desired JDK\r\n          (9 or greater):\r\n        </p>\r\n        <FormControl fullWidth style={{ marginTop: \"0.5rem\" }}>\r\n          <InputLabel htmlFor=\"vendor\">JDK To Download</InputLabel>\r\n          <Select\r\n            value={selectedVendorIndex}\r\n            inputProps={{\r\n              name: \"vendor\",\r\n              id: \"vendor\"\r\n            }}\r\n            onChange={(\r\n              e: React.ChangeEvent<{\r\n                name?: string | undefined;\r\n                value: unknown;\r\n              }>\r\n            ) => handleMenuItemClick(e)}\r\n          >\r\n            {selectItems}\r\n          </Select>\r\n        </FormControl>\r\n        <Box style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"0.3rem\", marginTop: \"1.5rem\" }}\r\n            href={selectedVendor.jdkDownloadLink}\r\n            target=\"_new\"\r\n          >\r\n            Download JDK &raquo;\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","import { Container, Link } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\n\r\nexport interface IFooterProps {}\r\n\r\nconst linkStyle = {\r\n  fontWeight: 500\r\n};\r\n\r\nexport default function Footer(props: IFooterProps) {\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingTop: \"1rem\",\r\n        paddingBottom: \"1rem\",\r\n        marginTop: \"3rem\",\r\n        background: \"#555555\",\r\n        color: \"white\"\r\n      }}\r\n    >\r\n      <Container\r\n        maxWidth=\"lg\"\r\n        style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\r\n      >\r\n        <p style={{ textAlign: \"center\" }}>\r\n          Copyright © 2019{\" \"}\r\n          <Link\r\n            href=\"https://github.com/justinmahar\"\r\n            color=\"inherit\"\r\n            style={linkStyle}\r\n          >\r\n            Justin Mahar\r\n          </Link>{\" \"}\r\n          • MIT License •{\" \"}\r\n          <Link\r\n            href=\"https://github.com/justinmahar/easyjre\"\r\n            color=\"inherit\"\r\n            style={linkStyle}\r\n          >\r\n            GitHub\r\n          </Link>{\" \"}\r\n          • Coffee Icon By{\" \"}\r\n          <Link\r\n            href=\"https://feathericons.com/\"\r\n            color=\"inherit\"\r\n            style={linkStyle}\r\n          >\r\n            FeatherIcon\r\n          </Link>\r\n        </p>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\n\r\nexport interface IHeroContainerProps {\r\n  maxWidth: false | \"md\" | \"xs\" | \"sm\" | \"lg\" | \"xl\" | undefined;\r\n}\r\n\r\nexport default function HeroContainer(props: IHeroContainerProps) {\r\n  return (\r\n    <div style={{ marginBottom: \"1rem\" }}>\r\n      <Container\r\n        maxWidth={props.maxWidth}\r\n        style={{\r\n          textAlign: \"center\",\r\n          marginTop: \"1rem\"\r\n        }}\r\n      >\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n        >\r\n          EasyJRE\r\n        </Typography>\r\n        <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\r\n          Use EasyJRE to create an OpenJDK JRE easily with <code>jlink</code>!\r\n        </Typography>\r\n        <Typography>\r\n          Starting with JDK 9 and up, Java classes are packaged into modules,\r\n          and standard JREs are no longer bundled with Java JDKs. You can use\r\n          this tool to easily create a JRE from any JDK.{\" \"}\r\n          <span role=\"img\" aria-label=\"fire\">\r\n            🔥\r\n          </span>\r\n        </Typography>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  Radio,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport INTENTIONS, { IIntention } from \"../intentions\";\r\n\r\nexport interface IIntentionContainerProps {\r\n  maxWidth: false | \"md\" | \"xs\" | \"sm\" | \"lg\" | \"xl\" | undefined;\r\n  intention: IIntention;\r\n  setIntention: React.Dispatch<React.SetStateAction<IIntention>>;\r\n}\r\n\r\nexport default function IntentionContainer(props: IIntentionContainerProps) {\r\n  const handleListItemClick = (\r\n    _event: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    index: number\r\n  ) => {\r\n    props.setIntention(INTENTIONS[index]);\r\n  };\r\n\r\n  const listItems: JSX.Element[] = INTENTIONS.map(\r\n    (intention: IIntention, index: number) => {\r\n      return (\r\n        <ListItem\r\n          key={index}\r\n          role={undefined}\r\n          dense\r\n          button\r\n          onClick={(event: React.MouseEvent<HTMLDivElement, MouseEvent>) =>\r\n            handleListItemClick(event, index)\r\n          }\r\n        >\r\n          <ListItemIcon>\r\n            <Radio\r\n              edge=\"start\"\r\n              checked={props.intention.name === intention.name}\r\n              tabIndex={-1}\r\n              disableRipple\r\n            />\r\n          </ListItemIcon>\r\n          <ListItemText primary={intention.display} />\r\n        </ListItem>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={props.maxWidth}\r\n      style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\r\n    >\r\n      <Paper style={{ padding: \"2rem\" }}>\r\n        <Typography variant=\"h4\" style={{ marginBottom: \"1rem\" }}>\r\n          What do you need?\r\n        </Typography>\r\n        <List>{listItems}</List>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Toolbar, AppBar, Typography } from \"@material-ui/core\";\r\n\r\nexport interface ITopBarProps {}\r\n\r\nexport default function TopBar(props: ITopBarProps) {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"30\"\r\n          height=\"30\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        >\r\n          <path d=\"M18 8h1a4 4 0 0 1 0 8h-1\" />\r\n          <path d=\"M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z\" />\r\n          <line x1=\"6\" y1=\"1\" x2=\"6\" y2=\"4\" />\r\n          <line x1=\"10\" y1=\"1\" x2=\"10\" y2=\"4\" />\r\n          <line x1=\"14\" y1=\"1\" x2=\"14\" y2=\"4\" />\r\n        </svg>\r\n        <Typography variant=\"h6\" color=\"inherit\" noWrap style={{ flexGrow: 1 }}>\r\n          <span style={{ marginLeft: \"1rem\" }}>EasyJRE</span>\r\n        </Typography>\r\n        <div style={{ marginRight: \"0.35rem\" }}>\r\n          <a\r\n            className=\"github-button\"\r\n            href=\"https://github.com/justinmahar/easyjre/fork\"\r\n            data-icon=\"octicon-repo-forked\"\r\n            data-size=\"large\"\r\n            data-show-count=\"false\"\r\n            aria-label=\"Fork justinmahar/easyjre on GitHub\"\r\n          >\r\n            Fork\r\n          </a>\r\n        </div>\r\n        <div>\r\n          <a\r\n            className=\"github-button\"\r\n            href=\"https://github.com/justinmahar/easyjre\"\r\n            data-icon=\"octicon-star\"\r\n            data-size=\"large\"\r\n            data-show-count=\"true\"\r\n            aria-label=\"Star justinmahar/easyjre on GitHub\"\r\n          >\r\n            Star\r\n          </a>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { Link, Typography } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React from \"react\";\nimport \"./App.css\";\nimport ChoosePlatformContainer from \"./components/ChoosePlatformContainer\";\nimport CopyPasteModulesContainer from \"./components/CopyPasteModulesContainer\";\nimport CreateJREContainer from \"./components/CreateJREContainer\";\nimport CustomizeJREContainer from \"./components/CustomizeJREContainer\";\nimport DownloadJDKContainer from \"./components/DownloadJDKContainer\";\nimport Footer from \"./components/Footer\";\nimport HeroContainer from \"./components/HeroContainer\";\nimport IntentionContainer from \"./components/IntentionContainer\";\nimport TopBar from \"./components/TopBar\";\nimport \"./css/material-icons.css\";\nimport \"./css/roboto.css\";\nimport { MAC_OS } from \"./platforms\";\nimport { IIntention, STANDARD_JAVA_SE, MANUAL_MODULES } from \"./intentions\";\n\nconst maxWidth = \"md\";\n\nconst App: React.FC = () => {\n  const [intention, setIntention] = React.useState<IIntention>(\n    STANDARD_JAVA_SE\n  );\n  const [platform, setPlatform] = React.useState(MAC_OS);\n  const [jdkVersion, setJdkVersion] = React.useState<string | null | undefined>(\n    null\n  );\n  const [includedJDKModules, setIncludedJDKModules] = React.useState<string[]>(\n    []\n  );\n  const [excludedJDKModules, setExcludedJDKModules] = React.useState<string[]>(\n    []\n  );\n  const [modulePath, setModulePath] = React.useState(\"../jmods\");\n  const [\n    manuallySpecifiedModules,\n    setManuallySpecifiedModules\n  ] = React.useState(\"\");\n  const [jdkBinPath, setJdkBinPath] = React.useState(\".\");\n  const [compressionLevel, setCompressionLevel] = React.useState(2);\n  const [headerFilesExcluded, setHeaderFilesExcluded] = React.useState(true);\n  const [manPagesExcluded, setManPagesExcluded] = React.useState(true);\n  const [bindServicesEnabled, setBindServicesEnabled] = React.useState(false);\n\n  return (\n    <div style={{ flexGrow: 1 }}>\n      <CssBaseline />\n      <TopBar />\n      <main>\n        <HeroContainer maxWidth={maxWidth} />\n        <IntentionContainer\n          maxWidth={maxWidth}\n          intention={intention}\n          setIntention={setIntention}\n        />\n        <DownloadJDKContainer maxWidth={maxWidth} />\n        <ChoosePlatformContainer\n          maxWidth={maxWidth}\n          platform={platform}\n          setPlatform={setPlatform}\n        />\n\n        {intention !== MANUAL_MODULES && (\n          <CopyPasteModulesContainer\n            maxWidth={maxWidth}\n            platform={platform}\n            jdkVersion={jdkVersion}\n            setJdkVersion={setJdkVersion}\n            includedJDKModules={includedJDKModules}\n            setIncludedJDKModules={setIncludedJDKModules}\n            excludedJDKModules={excludedJDKModules}\n            setExcludedJDKModules={setExcludedJDKModules}\n          />\n        )}\n        {intention !== STANDARD_JAVA_SE && (\n          <CustomizeJREContainer\n            maxWidth={maxWidth}\n            intention={intention}\n            jdkVersion={jdkVersion}\n            setJdkVersion={setJdkVersion}\n            includedJDKModules={includedJDKModules}\n            setIncludedJDKModules={setIncludedJDKModules}\n            excludedJDKModules={excludedJDKModules}\n            setExcludedJDKModules={setExcludedJDKModules}\n            modulePath={modulePath}\n            setModulePath={setModulePath}\n            manuallySpecifiedModules={manuallySpecifiedModules}\n            setManuallySpecifiedModules={setManuallySpecifiedModules}\n            jdkBinPath={jdkBinPath}\n            setJdkBinPath={setJdkBinPath}\n            compressionLevel={compressionLevel}\n            setCompressionLevel={setCompressionLevel}\n            headerFilesExcluded={headerFilesExcluded}\n            setHeaderFilesExcluded={setHeaderFilesExcluded}\n            manPagesExcluded={manPagesExcluded}\n            setManPagesExcluded={setManPagesExcluded}\n            bindServicesEnabled={bindServicesEnabled}\n            setBindServicesEnabled={setBindServicesEnabled}\n          />\n        )}\n        <CreateJREContainer\n          maxWidth={maxWidth}\n          platform={platform}\n          jdkVersion={jdkVersion}\n          includedJDKModules={includedJDKModules}\n          modulePath={modulePath}\n          manuallySpecifiedModules={manuallySpecifiedModules}\n          jdkBinPath={jdkBinPath}\n          compressionLevel={compressionLevel}\n          headerFilesExcluded={headerFilesExcluded}\n          manPagesExcluded={manPagesExcluded}\n          bindServicesEnabled={bindServicesEnabled}\n        />\n        <Typography\n          variant=\"h6\"\n          align=\"center\"\n          color=\"textSecondary\"\n          style={{ marginTop: \"2.5rem\" }}\n        >\n          If this project helped you, please{\" \"}\n          <Link href=\"https://github.com/justinmahar/easyjre\">\n            Star it on GitHub\n          </Link>{\" \"}\n          so others can find it. :)\n        </Typography>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <SnackbarProvider\n    autoHideDuration={2000}\n    anchorOrigin={{ horizontal: \"center\", vertical: \"top\" }}\n  >\n    <App />\n  </SnackbarProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}