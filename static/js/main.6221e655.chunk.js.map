{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initState","request","XMLHttpRequest","open","send","jsonResponseText","responseText","vendors","JSON","parse","state","userNeeds","selectedVendorIndex","jreIncludedModules","jreExcludedModules","optionCompressionType","optionExcludeHeaderFiles","optionExcludeManPages","optionBindServices","jdkVersion","optionJdkBinPath","optionModulePath","optionAdditionalModules","event","target","value","setState","document","getElementById","select","execCommand","preventDefault","trim","newJreIncludedModules","filter","element","sort","newJreExcludedModules","push","newValue","checked","replace","_this2","navigator","clipboard","readText","then","text","modules","split","strippedModules","forEach","index","indexOf","slice","startsWith","catch","err","console","error","_React$createElement","productOptionArray","name","organization","product","currOption","react_default","a","createElement","key","selectedVendor","downloadJDKHref","includedModulesString","includedModulesOptionArray","length","currModuleOption","className","title","moduleString","excludedModulesOptionArray","jreName","jreFolderName","toLowerCase","outputCommandString","excludeHeaderFilesOptionString","excludeManPagesOptionString","bindServicesOptionString","modulePathOptionString","jlinkCommand","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","href","type","id","onChange","handleUserNeedsChange","bind","htmlFor","handleProductChange","Fragment","readOnly","onClick","handleClickCopyWindowsListModulesCommand","version","fillRule","handleClickCopyLinuxListModulesCommand","handlePasteClick","size","handleExcludeClick","handleIncludeClick","placeholder","defineProperty","handleAdditionalModulesChange","handleModulePathChange","handleCompressionChange","handleExcludeHeaderFilesChange","handleExcludeManPagesChange","handleBindServicesChange","handleJdkBinPathChange","cols","rows","handleJlinkCommandTextareaClick","handleCopyButtonClick","Date","getFullYear","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6221e655.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initState();\n  }\n\n  initState() {\n    // Load vendors from JSON file\n    let jsonUrl = \"vendors.json\";\n    let request = new XMLHttpRequest();\n    request.open(\"GET\", jsonUrl, false);\n    request.send(null);\n    let jsonResponseText = request.responseText;\n    let vendors = JSON.parse(jsonResponseText);\n\n    let selectedVendorIndex = 0;\n\n    let jreIncludedModules = [];\n    let jreExcludedModules = [];\n\n    this.state = {\n      vendors: vendors.vendors,\n      userNeeds: \"need-quick\",\n      selectedVendorIndex: selectedVendorIndex,\n      jreIncludedModules: jreIncludedModules,\n      jreExcludedModules: jreExcludedModules,\n      optionCompressionType: 2,\n      optionExcludeHeaderFiles: true,\n      optionExcludeManPages: true,\n      optionBindServices: false,\n      jdkVersion: \"\",\n      optionJdkBinPath: \".\",\n      optionModulePath: \"../jmods\",\n      optionAdditionalModules: \"\"\n    };\n  }\n\n  handleProductChange(event) {\n    let selectedVendorIndex = event.target.value;\n\n    this.setState({\n      selectedVendorIndex: selectedVendorIndex\n    });\n  }\n\n  handleCopyButtonClick(event) {\n    let commandTextarea = document.getElementById(\"jlink-command-textarea\");\n    commandTextarea.select();\n    document.execCommand(\"copy\");\n    event.preventDefault();\n  }\n\n  handleJlinkCommandTextareaClick(event) {\n    event.target.select();\n  }\n\n  handleExcludeClick(event) {\n    let value = document.getElementById(\"jre-included-modules\").value;\n\n    if (value.trim() !== \"\") {\n      // Remove the selected value\n      let newJreIncludedModules = this.state.jreIncludedModules.filter(\n        element => {\n          return element !== value;\n        }\n      );\n      newJreIncludedModules.sort();\n\n      let newJreExcludedModules = this.state.jreExcludedModules;\n      newJreExcludedModules.push(value);\n      newJreExcludedModules.sort();\n      this.setState({\n        jreIncludedModules: newJreIncludedModules,\n        jreExcludedModules: newJreExcludedModules\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  handleIncludeClick(event) {\n    let value = document.getElementById(\"jre-excluded-modules\").value;\n\n    if (value.trim() !== \"\") {\n      // Remove the selected value\n      let newJreExcludedModules = this.state.jreExcludedModules.filter(\n        element => {\n          return element !== value;\n        }\n      );\n      newJreExcludedModules.sort();\n\n      let newJreIncludedModules = this.state.jreIncludedModules;\n      newJreIncludedModules.push(value);\n      newJreIncludedModules.sort();\n      this.setState({\n        jreIncludedModules: newJreIncludedModules,\n        jreExcludedModules: newJreExcludedModules\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  handleCompressionChange(event) {\n    let newValue = event.target.value;\n    this.setState({\n      optionCompressionType: newValue\n    });\n  }\n\n  handleExcludeHeaderFilesChange(event) {\n    let newValue = event.target.checked;\n    this.setState({\n      optionExcludeHeaderFiles: newValue\n    });\n  }\n\n  handleExcludeManPagesChange(event) {\n    let newValue = event.target.checked;\n    this.setState({\n      optionExcludeManPages: newValue\n    });\n  }\n\n  handleBindServicesChange(event) {\n    let newValue = event.target.checked;\n    this.setState({\n      optionBindServices: newValue\n    });\n  }\n\n  handleJdkBinPathChange(event) {\n    let newValue = event.target.value;\n    this.setState({\n      optionJdkBinPath: newValue\n    });\n  }\n\n  handleModulePathChange(event) {\n    let newValue = event.target.value;\n    this.setState({\n      optionModulePath: newValue\n    });\n  }\n\n  handleAdditionalModulesChange(event) {\n    let newValue = event.target.value.replace(/[ ]/g, \"\");\n    this.setState({\n      optionAdditionalModules: newValue\n    });\n  }\n\n  handlePasteClick(event) {\n    navigator.clipboard\n      .readText()\n      .then(text => {\n        let modules = text.split(/\\r?\\n/);\n        let strippedModules = [];\n        let jdkVersion = \"\";\n        modules.forEach((value, index) => {\n          value = value.trim();\n          if (value !== \"\" && value.indexOf(\"@\") >= 0) {\n            jdkVersion = value.slice(value.indexOf(\"@\") + 1);\n            value = value.slice(0, value.indexOf(\"@\"));\n            strippedModules.push(value);\n          }\n        });\n\n        let startsWithExclusion = \"jdk.\";\n        let newJreExcludedModules = strippedModules.filter(element => {\n          return element.startsWith(startsWithExclusion);\n        });\n        newJreExcludedModules.sort();\n\n        let newJreIncludedModules = strippedModules.filter(element => {\n          return !element.startsWith(startsWithExclusion);\n        });\n        newJreIncludedModules.sort();\n\n        this.setState({\n          jreIncludedModules: newJreIncludedModules,\n          jreExcludedModules: newJreExcludedModules,\n          jdkVersion: jdkVersion.trim()\n        });\n      })\n      .catch(err => {\n        console.error(\"Failed to read clipboard contents: \", err);\n      });\n  }\n\n  handleClickCopyWindowsListModulesCommand(event) {\n    let commandTextarea = document.getElementById(\"windows-list-command\");\n    commandTextarea.select();\n    document.execCommand(\"copy\");\n    event.preventDefault();\n  }\n\n  handleClickCopyLinuxListModulesCommand(event) {\n    let commandTextarea = document.getElementById(\"linux-list-command\");\n    commandTextarea.select();\n    document.execCommand(\"copy\");\n    event.preventDefault();\n  }\n\n  handleUserNeedsChange(event) {\n    let value = event.target.value;\n    this.setState({\n      userNeeds: value\n    });\n  }\n\n  render() {\n    let userNeeds = this.state.userNeeds;\n\n    let productOptionArray = [];\n\n    this.state.vendors.forEach((element, index) => {\n      let name = element.organization + \" \" + element.product;\n      let currOption = (\n        <option value={index} key={index}>\n          {name}\n        </option>\n      );\n      productOptionArray.push(currOption);\n    });\n\n    let selectedVendor = this.state.vendors[this.state.selectedVendorIndex];\n\n    let downloadJDKHref = selectedVendor[\"jdk_download_link\"];\n\n    let jreIncludedModules = this.state.jreIncludedModules;\n    let jreExcludedModules = this.state.jreExcludedModules;\n\n    let includedModulesString = \"\";\n    let includedModulesOptionArray = [];\n    jreIncludedModules.forEach((element, index) => {\n      includedModulesString += element;\n      if (index < jreIncludedModules.length - 1) {\n        includedModulesString += \",\";\n      }\n      let currModuleOption = (\n        <option\n          key={index}\n          value={element}\n          className=\"font-mono\"\n          title={element}\n        >\n          {element}\n        </option>\n      );\n      includedModulesOptionArray.push(currModuleOption);\n    });\n\n    let optionAdditionalModules = this.state.optionAdditionalModules.trim();\n\n    let moduleString = \"\";\n\n    if (includedModulesString !== \"\" || optionAdditionalModules !== \"\") {\n      moduleString = \" --add-modules \";\n      if (includedModulesString !== \"\") {\n        moduleString += includedModulesString;\n      }\n      if (includedModulesString !== \"\" && optionAdditionalModules !== \"\") {\n        moduleString += \",\";\n      }\n      if (optionAdditionalModules !== \"\") {\n        moduleString += optionAdditionalModules;\n      }\n    }\n\n    let excludedModulesOptionArray = [];\n    jreExcludedModules.forEach((element, index) => {\n      let currModuleOption = (\n        <option\n          key={index}\n          value={element}\n          className=\"font-mono\"\n          title={element}\n        >\n          {element}\n        </option>\n      );\n      excludedModulesOptionArray.push(currModuleOption);\n    });\n\n    let jreName = \"jre\";\n\n    let jdkVersion = this.state.jdkVersion;\n    if (jdkVersion != \"\") {\n      jreName += \"-\" + jdkVersion;\n    }\n\n    let jreFolderName = jreName.toLowerCase().replace(/[^a-z0-9.]/g, \"-\");\n\n    let outputCommandString = \"--output \" + jreFolderName;\n\n    // Options\n    let optionCompressionType = this.state.optionCompressionType;\n    let optionExcludeHeaderFiles = this.state.optionExcludeHeaderFiles;\n    let optionExcludeManPages = this.state.optionExcludeManPages;\n    let optionBindServices = this.state.optionBindServices;\n    let optionJdkBinPath = this.state.optionJdkBinPath.trim();\n    let optionModulePath = this.state.optionModulePath.trim();\n\n    let compressionOptionString = \" --compress=\" + optionCompressionType;\n\n    let excludeHeaderFilesOptionString = \"\";\n    if (optionExcludeHeaderFiles) {\n      excludeHeaderFilesOptionString = \" --no-header-files\";\n    }\n\n    let excludeManPagesOptionString = \"\";\n    if (optionExcludeManPages) {\n      excludeManPagesOptionString = \" --no-man-pages\";\n    }\n\n    let bindServicesOptionString = \"\";\n    if (optionBindServices) {\n      bindServicesOptionString = \" --bind-services\";\n    }\n\n    let modulePathOptionString = \"\";\n    if (optionModulePath !== \"\") {\n      modulePathOptionString = \" --module-path \" + optionModulePath;\n    }\n\n    let jlinkCommand =\n      optionJdkBinPath +\n      \"/jlink \" +\n      outputCommandString +\n      compressionOptionString +\n      excludeHeaderFilesOptionString +\n      excludeManPagesOptionString +\n      bindServicesOptionString +\n      modulePathOptionString +\n      moduleString;\n\n    return (\n      <div>\n        <nav className=\"flex items-center justify-between flex-wrap bg-blue p-3 px-6\">\n          <div className=\"flex items-center flex-no-shrink text-white mr-6\">\n            <svg\n              className=\"h-8 w-8 mr-2\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"30\"\n              height=\"30\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <path d=\"M18 8h1a4 4 0 0 1 0 8h-1\" />\n              <path d=\"M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z\" />\n              <line x1=\"6\" y1=\"1\" x2=\"6\" y2=\"4\" />\n              <line x1=\"10\" y1=\"1\" x2=\"10\" y2=\"4\" />\n              <line x1=\"14\" y1=\"1\" x2=\"14\" y2=\"4\" />\n            </svg>\n            <a href=\"/\" className=\"no-underline inline-block text-white\">\n              <span className=\"font-semibold text-xl tracking-tight\">\n                EasyJRE\n              </span>\n            </a>\n          </div>\n          <div className=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\n            <div className=\"text-sm lg:flex-grow\" />\n            <div>\n              <a\n                href=\"/\"\n                className=\"block mt-4 lg:inline-block lg:mt-0 text-white hover:text-white mr-4 no-underline hover:underline\"\n              >\n                Home\n              </a>\n              <a\n                href=\"https://github.com/justinmahar/easyjre\"\n                className=\"block mt-4 lg:inline-block lg:mt-0 text-white hover:text-white mr-4 no-underline hover:underline\"\n              >\n                GitHub\n              </a>\n            </div>\n          </div>\n        </nav>\n        <div className=\"text-center container mx-auto px-4\">\n          <h1 className=\"py-12\">\n            Use EasyJRE to create an OpenJDK JRE easily with <code>jlink</code>!\n          </h1>\n\n          <h2>What do you need?</h2>\n          <ul className=\"list-reset m-4 border border-grey md:w-3/5 mx-auto p-10 shadow-md bg-blue-lightest\">\n            <li>\n              <input\n                type=\"radio\"\n                name=\"needs\"\n                id=\"need-quick\"\n                value=\"need-quick\"\n                checked={userNeeds === \"need-quick\"}\n                onChange={this.handleUserNeedsChange.bind(this)}\n              />{\" \"}\n              <label htmlFor=\"need-quick\" className=\"text-sm font-bold text-black\">\n                I just want a lightweight (~40-60 MB) standard Java SE JRE for a\n                particular JDK. Quick and painless.\n              </label>\n            </li>\n            <br />\n            <li>\n              <input\n                type=\"radio\"\n                name=\"needs\"\n                id=\"need-list\"\n                value=\"need-list\"\n                checked={userNeeds === \"need-list\"}\n                onChange={this.handleUserNeedsChange.bind(this)}\n              />{\" \"}\n              <label htmlFor=\"need-list\" className=\"text-sm font-bold text-black\">\n                Let me pick and choose from a list which JDK modules are\n                included in my JRE.\n              </label>\n            </li>\n            <br />\n            <li>\n              <input\n                type=\"radio\"\n                name=\"needs\"\n                id=\"need-custom\"\n                value=\"need-custom\"\n                checked={userNeeds === \"need-custom\"}\n                onChange={this.handleUserNeedsChange.bind(this)}\n              />{\" \"}\n              <label htmlFor=\"need-custom\" className=\"text-sm font-bold text-black\">\n                I know exactly which modules I need to include in my JRE. I\n                don't need to see a list.\n              </label>\n            </li>\n            <br />\n            <li>\n              <input\n                type=\"radio\"\n                name=\"needs\"\n                id=\"need-control\"\n                value=\"need-control\"\n                checked={userNeeds === \"need-control\"}\n                onChange={this.handleUserNeedsChange.bind(this)}\n              />{\" \"}\n              <label htmlFor=\"need-control\" className=\"text-sm font-bold text-black\">\n                I want total control. Show me all the options!\n              </label>\n            </li>\n          </ul>\n\n          <br />\n          <ul className=\"list-reset\">\n            <li>\n              <h4>Select, download, and unpack your desired JDK:</h4>\n              <br />\n              <select\n                onChange={this.handleProductChange.bind(this)}\n                className=\"rounded shadow border\"\n              >\n                {productOptionArray}\n              </select>{\" \"}\n              <a\n                href={downloadJDKHref}\n                target=\"_new\"\n                className=\"inline-block no-underline bg-transparent hover:bg-blue text-blue-dark font-semibold hover:text-white py-1 px-4 border border-blue hover:border-transparent rounded\"\n              >\n                Download JDK &raquo;\n              </a>\n              <br />\n              <br />\n            </li>\n            <br />\n            {userNeeds !== \"need-custom\" && (\n              <>\n                <li>\n                  <h4>\n                    Copy a list of the available JDK modules by running the\n                    following command{\" \"}\n                    <span className=\"underline\">in the JDK bin folder</span>:\n                  </h4>\n                  <br />\n                  <ul className=\"list-reset\">\n                    <li className=\"my-2\">\n                      Windows:{\" \"}\n                      <input\n                        type=\"text\"\n                        className=\"font-mono roman border inline-block w-1/4\"\n                        id=\"windows-list-command\"\n                        value=\".\\java --list-modules | clip\"\n                        readOnly\n                      />{\" \"}\n                      <button\n                        className=\"inline-block border bg-grey-lighter p-1\"\n                        onClick={this.handleClickCopyWindowsListModulesCommand.bind(\n                          this\n                        )}\n                      >\n                        <svg\n                          width=\"16\"\n                          height=\"16\"\n                          viewBox=\"0 0 20 20\"\n                          version=\"1.1\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <g\n                            stroke=\"none\"\n                            strokeWidth=\"1\"\n                            fill=\"#000000\"\n                            fillRule=\"evenodd\"\n                          >\n                            <g id=\"icon-shape\">\n                              <path d=\"M12.9728369,2.59456737 C12.7749064,1.12946324 11.5193533,0 10,0 C8.48064666,0 7.2250936,1.12946324 7.02716314,2.59456737 L5,3 L5,4 L3.99406028,4 C2.89451376,4 2,4.8927712 2,5.99406028 L2,18.0059397 C2,19.1054862 2.8927712,20 3.99406028,20 L16.0059397,20 C17.1054862,20 18,19.1072288 18,18.0059397 L18,5.99406028 C18,4.89451376 17.1072288,4 16.0059397,4 L15,4 L15,3 L12.9728369,2.59456737 Z M5,6 L4,6 L4,18 L16,18 L16,6 L15,6 L15,7 L5,7 L5,6 Z M10,4 C10.5522847,4 11,3.55228475 11,3 C11,2.44771525 10.5522847,2 10,2 C9.44771525,2 9,2.44771525 9,3 C9,3.55228475 9.44771525,4 10,4 Z\" />\n                            </g>\n                          </g>\n                        </svg>\n                      </button>\n                    </li>\n                    <li>\n                      Linux/OSX:{\" \"}\n                      <input\n                        type=\"text\"\n                        className=\"font-mono roman border inline-block w-1/4\"\n                        id=\"linux-list-command\"\n                        value=\"./java --list-modules | pbcopy\"\n                        readOnly\n                      />{\" \"}\n                      <button\n                        className=\"inline-block border bg-grey-lighter p-1\"\n                        onClick={this.handleClickCopyLinuxListModulesCommand.bind(\n                          this\n                        )}\n                      >\n                        <svg\n                          width=\"16\"\n                          height=\"16\"\n                          viewBox=\"0 0 20 20\"\n                          version=\"1.1\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <g\n                            stroke=\"none\"\n                            strokeWidth=\"1\"\n                            fill=\"#000000\"\n                            fillRule=\"evenodd\"\n                          >\n                            <g id=\"icon-shape\">\n                              <path d=\"M12.9728369,2.59456737 C12.7749064,1.12946324 11.5193533,0 10,0 C8.48064666,0 7.2250936,1.12946324 7.02716314,2.59456737 L5,3 L5,4 L3.99406028,4 C2.89451376,4 2,4.8927712 2,5.99406028 L2,18.0059397 C2,19.1054862 2.8927712,20 3.99406028,20 L16.0059397,20 C17.1054862,20 18,19.1072288 18,18.0059397 L18,5.99406028 C18,4.89451376 17.1072288,4 16.0059397,4 L15,4 L15,3 L12.9728369,2.59456737 Z M5,6 L4,6 L4,18 L16,18 L16,6 L15,6 L15,7 L5,7 L5,6 Z M10,4 C10.5522847,4 11,3.55228475 11,3 C11,2.44771525 10.5522847,2 10,2 C9.44771525,2 9,2.44771525 9,3 C9,3.55228475 9.44771525,4 10,4 Z\" />\n                            </g>\n                          </g>\n                        </svg>\n                      </button>\n                      <button />\n                    </li>\n                  </ul>\n                </li>\n                <br />\n                <br />\n                <li>\n                  <h4>Paste the modules here: </h4>\n                  <br />\n                  <div>\n                    <p>\n                      <button\n                        className=\"bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded\"\n                        onClick={this.handlePasteClick.bind(this)}\n                      >\n                        Paste\n                      </button>\n                    </p>\n                  </div>\n                  {jdkVersion && (\n                    <div>\n                      <br />\n                      <span className=\"text-xs text-green font-bold\">\n                        {\" \"}\n                        JDK {jdkVersion} ✓\n                      </span>\n                    </div>\n                  )}\n                  <br />\n                </li>\n              </>\n            )}\n          </ul>\n          <br />\n          {userNeeds !== \"need-quick\" && (\n            <>\n              <h4>\n                Customize Your{\" \"}\n                {selectedVendor.organization + \" \" + selectedVendor.product} JRE\n              </h4>\n              <br />\n\n              {userNeeds !== \"need-custom\" && (\n                <>\n                  <h5>JDK Root Modules</h5>\n                  <br />\n                  {jdkVersion !== \"\" && (\n                    <>\n                      <p className=\"text-sm italic\">\n                        The JDK comes with many root modules which contain the\n                        JDK core classes. The modules prefixed with{\" \"}\n                        <code className=\"font-mono roman border inline-block\">\n                          jdk.\n                        </code>{\" \"}\n                        are typically not needed for a production JRE. Below,\n                        all non-JDK modules have been included in the JRE. This\n                        will get you up and running quickly without needing to\n                        use an entire JDK.\n                      </p>\n                      <br />\n                      <p className=\"text-sm italic\">\n                        Feel free to include or exclude any modules you might or\n                        might not need. For instance, you can use the{\" \"}\n                        <code className=\"font-mono roman border inline-block\">\n                          jdeps\n                        </code>{\" \"}\n                        command on your Java classes to narrow down which\n                        modules you actually need to include.\n                      </p>\n                      <br />\n                      <p className=\"text-sm italic\">\n                        There is another section below for adding additional\n                        modules (such as custom ones, or manually specifying JDK\n                        ones) to the JRE.\n                      </p>\n                      <br />\n                      <h4>Included JDK Root Modules:</h4>\n                      <br />\n                      <div>\n                        <select\n                          id=\"jre-included-modules\"\n                          size=\"8\"\n                          className=\"rounded shadow border\"\n                        >\n                          {includedModulesOptionArray}\n                        </select>\n                        <br />\n                        <br />\n                        <button\n                          className=\"bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded\"\n                          onClick={this.handleExcludeClick.bind(this)}\n                        >\n                          Exclude &darr;\n                        </button>\n                      </div>\n                      <br />\n                      <h4>Excluded JDK Root Modules:</h4>\n                      <br />\n                      <div>\n                        <select\n                          id=\"jre-excluded-modules\"\n                          size=\"8\"\n                          className=\"rounded shadow border\"\n                        >\n                          {excludedModulesOptionArray}\n                        </select>\n                        <br />\n                        <br />\n                        <button\n                          className=\"bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded\"\n                          onClick={this.handleIncludeClick.bind(this)}\n                        >\n                          Include &uarr;\n                        </button>\n                      </div>\n                    </>\n                  )}\n                  {!jdkVersion && (\n                    <>\n                      <div className=\"font-bold border p-1 inline-block text-red\">\n                        Please paste your JDK modules above to customize which\n                        root modules are included in the JRE. Ignore this if\n                        you'd like to add them manually below.\n                      </div>\n                    </>\n                  )}\n                  <br />\n                </>\n              )}\n              <br />\n              <h5>Manually Specifed Modules</h5>\n              <br />\n              <div>\n                <p className=\"text-sm italic\">\n                  Specify any modules you'd like added here, such as your custom\n                  ones. Comma-separate the values and don't use spaces.\n                </p>\n                <br />\n                <p className=\"text-sm italic\">\n                  You can specify root JDK modules (such as{\" \"}\n                  <code className=\"font-mono roman border inline-block\">\n                    java.base\n                  </code>\n                  ) here manually if you'd like.\n                </p>\n                <br />\n                <label htmlFor=\"additional-modules\">\n                  Manually Specifed Modules:{\" \"}\n                </label>\n                <input\n                  id=\"additional-modules\"\n                  type=\"text\"\n                  value=\"\"\n                  placeholder=\"my.mod,other.mod,etc\"\n                  value={optionAdditionalModules}\n                  className=\"shadow appearance-none border rounded py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline\"\n                  onChange={this.handleAdditionalModulesChange.bind(this)}\n                />\n              </div>\n              <br />\n              <h5>Module Path</h5>\n              <br />\n              <div>\n                <p className=\"text-sm italic\">\n                  The module path is a semicolon-separated list of paths where{\" \"}\n                  <code className=\"font-mono roman border inline-block\">\n                    jlink\n                  </code>{\" \"}\n                  will search for modules. They can be relative or absolute, and\n                  can use environment variables. JDK modules are typically in\n                  the JDK directory{\" \"}\n                  <code className=\"font-mono roman border inline-block\">\n                    jmods\n                  </code>\n                  . If you run{\" \"}\n                  <code className=\"font-mono roman border inline-block\">\n                    jlink\n                  </code>{\" \"}\n                  from{\" \"}\n                  <code className=\"font-mono roman border inline-block\">\n                    bin\n                  </code>\n                  , then{\" \"}\n                  <code className=\"font-mono roman border inline-block\">\n                    ../jmods\n                  </code>{\" \"}\n                  will work just fine. You can optionally add your own module\n                  paths after that, separated by a semicolon.\n                </p>\n                <br />\n                <label htmlFor=\"module-path\">Module Path: </label>\n                <input\n                  id=\"module-path\"\n                  type=\"text\"\n                  value={optionModulePath}\n                  className=\"shadow appearance-none border rounded py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline\"\n                  onChange={this.handleModulePathChange.bind(this)}\n                />\n              </div>\n              <br />\n              {userNeeds === \"need-control\" && (\n                <>\n                  <h5>Other Options</h5>\n                  <br />\n                  <div>\n                    <p className=\"text-sm italic\">\n                      Choose the level of compression. ZIP compression offers a\n                      significant reduction in size with a small hit to class\n                      loading performance.\n                    </p>\n                    <br />\n                    <label\n                      htmlFor=\"compression\"\n                      title=\"Enable compression of resources\"\n                    >\n                      Compression:{\" \"}\n                    </label>\n                    <select\n                      id=\"compression\"\n                      value={optionCompressionType}\n                      title=\"Enable compression of resources\"\n                      className=\"rounded shadow border\"\n                      onChange={this.handleCompressionChange.bind(this)}\n                    >\n                      <option value=\"0\">No compression</option>\n                      <option value=\"1\">Constant string sharing</option>\n                      <option value=\"2\">ZIP</option>\n                    </select>\n                  </div>\n                  <br />\n                  <div>\n                    <p className=\"text-sm italic\">\n                      Whether or not to exclude header files from the JRE.\n                    </p>\n                    <br />\n                    <label htmlFor=\"headers-excluded\">\n                      Exclude Header Files{\" \"}\n                    </label>\n                    <input\n                      id=\"headers-excluded\"\n                      type=\"checkbox\"\n                      checked={optionExcludeHeaderFiles}\n                      onChange={this.handleExcludeHeaderFilesChange.bind(this)}\n                    />\n                  </div>\n                  <br />\n                  <div>\n                    <p className=\"text-sm italic\">\n                      Whether or not to exclude man pages from the JRE.\n                    </p>\n                    <br />\n                    <label htmlFor=\"man-pages-excluded\">\n                      Exclude Man Pages{\" \"}\n                    </label>\n                    <input\n                      id=\"man-pages-excluded\"\n                      type=\"checkbox\"\n                      checked={optionExcludeManPages}\n                      onChange={this.handleExcludeManPagesChange.bind(this)}\n                    />\n                  </div>\n                  <br />\n                  <div>\n                    <p className=\"text-sm italic\">\n                      Whether or not to link service provider modules and their\n                      dependencies.\n                    </p>\n                    <br />\n                    <label\n                      htmlFor=\"bind-services\"\n                      title=\"Link service provider modules and their dependencies.\"\n                    >\n                      Bind Services{\" \"}\n                    </label>\n                    <input\n                      id=\"bind-services\"\n                      type=\"checkbox\"\n                      title=\"Link service provider modules and their dependencies.\"\n                      checked={optionBindServices}\n                      onChange={this.handleBindServicesChange.bind(this)}\n                    />\n                  </div>\n                  <br />\n                  <h5>JDK Bin Path</h5>\n                  <br />\n                  <div>\n                    <p className=\"text-sm italic\">\n                      Specify the path to the{\" \"}\n                      <code className=\"font-mono roman border inline-block\">\n                        bin\n                      </code>{\" \"}\n                      folder of your JDK. You can use an environment variable\n                      here, but it's safer to execute{\" \"}\n                      <code className=\"font-mono roman border inline-block\">\n                        jlink\n                      </code>{\" \"}\n                      directly from the {selectedVendor.product} JDK{\" \"}\n                      <code className=\"font-mono roman border inline-block\">\n                        bin\n                      </code>{\" \"}\n                      to prevent using an incorrect JDK that might be on your{\" \"}\n                      <code className=\"font-mono roman border inline-block\">\n                        PATH\n                      </code>\n                      . The safest way is to leave this as{\" \"}\n                      <code className=\"font-mono roman border inline-block\">\n                        .\n                      </code>\n                      , navigate to the{\" \"}\n                      <code className=\"font-mono roman border inline-block\">\n                        bin\n                      </code>{\" \"}\n                      directory, and run the{\" \"}\n                      <code className=\"font-mono roman border inline-block\">\n                        jlink\n                      </code>{\" \"}\n                      command copied from below. If you change this, be sure to\n                      also change the Module Path above.\n                    </p>\n                    <br />\n                    <label htmlFor=\"jdk-bin-path\">JDK Bin Path: </label>\n                    <input\n                      id=\"jdk-bin-path\"\n                      type=\"text\"\n                      value={optionJdkBinPath}\n                      className=\"shadow appearance-none border rounded py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline\"\n                      onChange={this.handleJdkBinPathChange.bind(this)}\n                    />\n                  </div>\n                </>\n              )}\n            </>\n          )}\n          <br />\n          <h4>\n            Copy the{\" \"}\n            <code className=\"font-mono roman border inline-block\">jlink</code>{\" \"}\n            command below and run it in the{\" \"}\n            <code className=\"font-mono roman border inline-block\">bin</code>{\" \"}\n            directory of the JDK:\n          </h4>\n          <br />\n          <div>\n            <textarea\n              id=\"jlink-command-textarea\"\n              value={jlinkCommand}\n              readOnly\n              cols=\"80\"\n              rows=\"8\"\n              className=\"rounded shadow border font-mono text-xs\"\n              onClick={this.handleJlinkCommandTextareaClick}\n            />\n          </div>\n          <div>\n            <button\n              onClick={this.handleCopyButtonClick.bind(this)}\n              className=\"no-underline bg-transparent hover:bg-blue text-blue-dark font-semibold hover:text-white py-1 px-4 border border-blue hover:border-transparent rounded\"\n            >\n              Copy\n            </button>\n          </div>\n          <br />\n          <br />\n          <h3>\n            Your JRE will be created in the{\" \"}\n            <code className=\"font-mono roman border inline-block\">\n              {jreFolderName}\n            </code>{\" \"}\n            folder of your current working directory!\n          </h3>\n          <br />\n          <p className=\"text-sm italic\">\n            If not, be sure you are running this command with the correct\n            privileges!\n          </p>\n          <br />\n          <br />\n        </div>\n        <footer className=\"text-center py-4 mt-2 bg-grey-lighter text-sm\">\n          Copyright &copy; {new Date().getFullYear()}{\" \"}\n          <a href=\"https://github.com/justinmahar\">Justin Mahar</a> &bull;{\" \"}\n          <a href=\"https://opensource.org/licenses/MIT\">MIT License</a> &bull;{\" \"}\n          <a href=\"https://github.com/justinmahar/easyjre\">EasyJRE on GitHub</a>{\" \"}\n          &bull; Coffee Icon By{\" \"}\n          <a href=\"https://feathericons.com/\">FeatherIcons</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}