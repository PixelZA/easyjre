{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initState","request","XMLHttpRequest","open","send","jsonResponseText","responseText","vendors","JSON","parse","state","selectedVendorIndex","jreIncludedModules","jreExcludedModules","optionCompressionType","optionExcludeHeaderFiles","optionExcludeManPages","optionBindServices","jdkVersion","optionJdkBinPath","optionModulePath","optionAdditionalModules","event","target","value","setState","document","getElementById","select","execCommand","preventDefault","trim","newJreIncludedModules","filter","element","sort","newJreExcludedModules","push","newValue","checked","replace","_this2","navigator","clipboard","readText","then","text","modules","split","strippedModules","forEach","index","indexOf","slice","startsWith","console","log","catch","err","error","_React$createElement","productOptionArray","name","organization","product","currOption","react_default","a","createElement","key","selectedVendor","downloadJDKHref","includedModulesString","includedModulesOptionArray","length","currModuleOption","className","title","moduleString","excludedModulesOptionArray","productName","jreFolderName","toLowerCase","outputCommandString","excludeHeaderFilesOptionString","excludeManPagesOptionString","bindServicesOptionString","modulePathOptionString","jlinkCommand","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","href","onChange","handleProductChange","bind","onClick","handlePasteClick","handleCopyButtonClick","id","readOnly","cols","rows","handleJlinkCommandTextareaClick","Fragment","size","handleExcludeClick","handleIncludeClick","htmlFor","type","placeholder","defineProperty","handleAdditionalModulesChange","handleModulePathChange","handleCompressionChange","handleExcludeHeaderFilesChange","handleExcludeManPagesChange","handleBindServicesChange","handleJdkBinPathChange","Date","getFullYear","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a9758ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initState();\n  }\n\n  initState() {\n    // Load vendors from JSON file\n    let jsonUrl = \"vendors.json\";\n    let request = new XMLHttpRequest();\n    request.open(\"GET\", jsonUrl, false);\n    request.send(null);\n    let jsonResponseText = request.responseText;\n    let vendors = JSON.parse(jsonResponseText);\n\n    let selectedVendorIndex = 0;\n\n    let jreIncludedModules = [];\n    let jreExcludedModules = [];\n\n    this.state = {\n      vendors: vendors.vendors,\n      selectedVendorIndex: selectedVendorIndex,\n      jreIncludedModules: jreIncludedModules,\n      jreExcludedModules: jreExcludedModules,\n      optionCompressionType: 2,\n      optionExcludeHeaderFiles: true,\n      optionExcludeManPages: true,\n      optionBindServices: false,\n      jdkVersion: \"\",\n      optionJdkBinPath: \".\",\n      optionModulePath: \"../jmods\",\n      optionAdditionalModules: \"\"\n    };\n  }\n\n  handleProductChange(event) {\n    let selectedVendorIndex = event.target.value;\n\n    this.setState({\n      selectedVendorIndex: selectedVendorIndex\n    });\n  }\n\n  handleCopyButtonClick(event) {\n    let commandTextarea = document.getElementById(\"jlink-command-textarea\");\n    commandTextarea.select();\n    document.execCommand(\"copy\");\n    event.preventDefault();\n  }\n\n  handleJlinkCommandTextareaClick(event) {\n    event.target.select();\n  }\n\n  handleExcludeClick(event) {\n    let value = document.getElementById(\"jre-included-modules\").value;\n\n    if (value.trim() !== \"\") {\n      // Remove the selected value\n      let newJreIncludedModules = this.state.jreIncludedModules.filter(\n        element => {\n          return element !== value;\n        }\n      );\n      newJreIncludedModules.sort();\n\n      let newJreExcludedModules = this.state.jreExcludedModules;\n      newJreExcludedModules.push(value);\n      newJreExcludedModules.sort();\n      this.setState({\n        jreIncludedModules: newJreIncludedModules,\n        jreExcludedModules: newJreExcludedModules\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  handleIncludeClick(event) {\n    let value = document.getElementById(\"jre-excluded-modules\").value;\n\n    if (value.trim() !== \"\") {\n      // Remove the selected value\n      let newJreExcludedModules = this.state.jreExcludedModules.filter(\n        element => {\n          return element !== value;\n        }\n      );\n      newJreExcludedModules.sort();\n\n      let newJreIncludedModules = this.state.jreIncludedModules;\n      newJreIncludedModules.push(value);\n      newJreIncludedModules.sort();\n      this.setState({\n        jreIncludedModules: newJreIncludedModules,\n        jreExcludedModules: newJreExcludedModules\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  handleCompressionChange(event) {\n    let newValue = event.target.value;\n    this.setState({\n      optionCompressionType: newValue\n    });\n  }\n\n  handleExcludeHeaderFilesChange(event) {\n    let newValue = event.target.checked;\n    this.setState({\n      optionExcludeHeaderFiles: newValue\n    });\n  }\n\n  handleExcludeManPagesChange(event) {\n    let newValue = event.target.checked;\n    this.setState({\n      optionExcludeManPages: newValue\n    });\n  }\n\n  handleBindServicesChange(event) {\n    let newValue = event.target.checked;\n    this.setState({\n      optionBindServices: newValue\n    });\n  }\n\n  handleJdkBinPathChange(event) {\n    let newValue = event.target.value;\n    this.setState({\n      optionJdkBinPath: newValue\n    });\n  }\n\n  handleModulePathChange(event) {\n    let newValue = event.target.value;\n    this.setState({\n      optionModulePath: newValue\n    });\n  }\n\n  handleAdditionalModulesChange(event) {\n    let newValue = event.target.value.replace(/[ ]/g, \"\");\n    this.setState({\n      optionAdditionalModules: newValue\n    });\n  }\n\n  handlePasteClick(event) {\n    navigator.clipboard\n      .readText()\n      .then(text => {\n        let modules = text.split(/\\r?\\n/);\n        let strippedModules = [];\n        let jdkVersion = \"\";\n        modules.forEach((value, index) => {\n          value = value.trim();\n          if (value !== \"\" && value.indexOf(\"@\") >= 0) {\n            jdkVersion = value.slice(value.indexOf(\"@\") + 1);\n            value = value.slice(0, value.indexOf(\"@\"));\n            strippedModules.push(value);\n          }\n        });\n\n        let startsWithExclusion = \"jdk.\";\n        let newJreExcludedModules = strippedModules.filter(element => {\n          return element.startsWith(startsWithExclusion);\n        });\n        newJreExcludedModules.sort();\n\n        let newJreIncludedModules = strippedModules.filter(element => {\n          return !element.startsWith(startsWithExclusion);\n        });\n        newJreIncludedModules.sort();\n\n        this.setState({\n          jreIncludedModules: newJreIncludedModules,\n          jreExcludedModules: newJreExcludedModules,\n          jdkVersion: jdkVersion.trim()\n        });\n\n        console.log(\"strippedModules: \", strippedModules);\n        console.log(\"jdkVersion: \", jdkVersion.trim());\n      })\n      .catch(err => {\n        console.error(\"Failed to read clipboard contents: \", err);\n      });\n  }\n\n  render() {\n    let productOptionArray = [];\n\n    this.state.vendors.forEach((element, index) => {\n      let name = element.organization + \" \" + element.product;\n      let currOption = (\n        <option value={index} key={index}>\n          {name}\n        </option>\n      );\n      productOptionArray.push(currOption);\n    });\n\n    let selectedVendor = this.state.vendors[this.state.selectedVendorIndex];\n\n    let downloadJDKHref = selectedVendor[\"jdk_download_link\"];\n\n    let jreIncludedModules = this.state.jreIncludedModules;\n    let jreExcludedModules = this.state.jreExcludedModules;\n\n    let includedModulesString = \"\";\n    let includedModulesOptionArray = [];\n    jreIncludedModules.forEach((element, index) => {\n      includedModulesString += element;\n      if (index < jreIncludedModules.length - 1) {\n        includedModulesString += \",\";\n      }\n      let currModuleOption = (\n        <option\n          key={index}\n          value={element}\n          className=\"font-mono\"\n          title={element}\n        >\n          {element}\n        </option>\n      );\n      includedModulesOptionArray.push(currModuleOption);\n    });\n\n    let optionAdditionalModules = this.state.optionAdditionalModules.trim();\n\n    let moduleString = \"\";\n\n    if (includedModulesString !== \"\" || optionAdditionalModules !== \"\") {\n      moduleString = \" --add-modules \";\n      if (includedModulesString !== \"\") {\n        moduleString += includedModulesString;\n      }\n      if (includedModulesString !== \"\" && optionAdditionalModules !== \"\") {\n        moduleString += \",\";\n      }\n      if (optionAdditionalModules !== \"\") {\n        moduleString += optionAdditionalModules;\n      }\n    }\n\n    let excludedModulesOptionArray = [];\n    jreExcludedModules.forEach((element, index) => {\n      let currModuleOption = (\n        <option\n          key={index}\n          value={element}\n          className=\"font-mono\"\n          title={element}\n        >\n          {element}\n        </option>\n      );\n      excludedModulesOptionArray.push(currModuleOption);\n    });\n\n    let productName =\n      selectedVendor.organization + \" \" + selectedVendor.product;\n\n    let jdkVersion = this.state.jdkVersion;\n    if (jdkVersion != \"\") {\n      productName += \" \" + jdkVersion;\n    }\n\n    let jreFolderName =\n      \"jre\" + \"-\" + productName.toLowerCase().replace(/[^a-z0-9.]/g, \"-\");\n\n    let outputCommandString = \"--output \" + jreFolderName;\n\n    // Options\n    let optionCompressionType = this.state.optionCompressionType;\n    let optionExcludeHeaderFiles = this.state.optionExcludeHeaderFiles;\n    let optionExcludeManPages = this.state.optionExcludeManPages;\n    let optionBindServices = this.state.optionBindServices;\n    let optionJdkBinPath = this.state.optionJdkBinPath.trim();\n    let optionModulePath = this.state.optionModulePath.trim();\n\n    let compressionOptionString = \" --compress=\" + optionCompressionType;\n\n    let excludeHeaderFilesOptionString = \"\";\n    if (optionExcludeHeaderFiles) {\n      excludeHeaderFilesOptionString = \" --no-header-files\";\n    }\n\n    let excludeManPagesOptionString = \"\";\n    if (optionExcludeManPages) {\n      excludeManPagesOptionString = \" --no-header-files\";\n    }\n\n    let bindServicesOptionString = \"\";\n    if (optionBindServices) {\n      bindServicesOptionString = \" --bind-services\";\n    }\n\n    let modulePathOptionString = \"\";\n    if (optionModulePath !== \"\") {\n      modulePathOptionString = \" --module-path \" + optionModulePath;\n    }\n\n    let jlinkCommand =\n      optionJdkBinPath +\n      \"/jlink \" +\n      outputCommandString +\n      compressionOptionString +\n      excludeHeaderFilesOptionString +\n      excludeManPagesOptionString +\n      bindServicesOptionString +\n      modulePathOptionString +\n      moduleString;\n\n    return (\n      <div>\n        <nav className=\"flex items-center justify-between flex-wrap bg-blue p-4\">\n          <div className=\"flex items-center flex-no-shrink text-white mr-6\">\n            <svg\n              className=\"h-8 w-8 mr-2\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"30\"\n              height=\"30\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <path d=\"M18 8h1a4 4 0 0 1 0 8h-1\" />\n              <path d=\"M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z\" />\n              <line x1=\"6\" y1=\"1\" x2=\"6\" y2=\"4\" />\n              <line x1=\"10\" y1=\"1\" x2=\"10\" y2=\"4\" />\n              <line x1=\"14\" y1=\"1\" x2=\"14\" y2=\"4\" />\n            </svg>\n            <a href=\"/\" className=\"no-underline inline-block text-white\">\n              <span className=\"font-semibold text-xl tracking-tight\">\n                EasyJRE\n              </span>\n            </a>\n          </div>\n          <div className=\"block lg:hidden\">\n            <button className=\"flex items-center px-3 py-2 border rounded text-white border-teal-light hover:text-white hover:border-white\">\n              <svg\n                className=\"fill-current h-3 w-3\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <title>Menu</title>\n                <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n              </svg>\n            </button>\n          </div>\n          <div className=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\n            <div className=\"text-sm lg:flex-grow\">\n              <a\n                href=\"/\"\n                className=\"block mt-4 lg:inline-block lg:mt-0 text-white hover:text-white mr-4 no-underline hover:underline\"\n              >\n                Home\n              </a>\n              <a\n                href=\"https://github.com/justinmahar/easyjre\"\n                className=\"block mt-4 lg:inline-block lg:mt-0 text-white hover:text-white mr-4 no-underline hover:underline\"\n              >\n                GitHub\n              </a>\n            </div>\n            <div>\n              <span className=\"font-bold inline-block text-sm px-4 py-2 leading-none text-white mt-4 lg:mt-0\">\n                Use EasyJRE to create an OpenJDK JRE easily with jlink!\n              </span>\n            </div>\n          </div>\n        </nav>\n        <div className=\"text-center\">\n          <h1>EasyJRE: The Easiest Way To Create An OpenJDK JRE for Java!</h1>\n          <h3>Select your JDK:</h3>\n          <select\n            onChange={this.handleProductChange.bind(this)}\n            className=\"rounded shadow border\"\n          >\n            {productOptionArray}\n          </select>\n          <a\n            href={downloadJDKHref}\n            target=\"_new\"\n            className=\"inline-block no-underline bg-transparent hover:bg-blue text-blue-dark font-semibold hover:text-white py-1 px-4 border border-blue hover:border-transparent rounded\"\n          >\n            Download JDK &raquo;\n          </a>\n          <h3>Four easy steps:</h3>\n          <ol className=\"list-reset\">\n            <li>\n              1. Download and unpack{\" \"}\n              <a href={downloadJDKHref} target=\"_new\">\n                {selectedVendor.organization} {selectedVendor.product} JDK\n              </a>\n            </li>\n            <li>\n              <p>\n                2. Copy a list of the available JDK modules using the following\n                command <strong>in the JDK bin folder</strong>:\n              </p>\n              <ul className=\"list-reset\">\n                <li>\n                  Windows:{\" \"}\n                  <code className=\"font-mono roman border inline-block\">\n                    .\\java --list-modules | clip\n                  </code>\n                </li>\n                <li>\n                  Linux/OSX:{\" \"}\n                  <code className=\"font-mono roman border inline-block\">\n                    ./java --list-modules | pbcopy\n                  </code>\n                </li>\n              </ul>\n            </li>\n            <li>\n              <p>\n                3. Paste the modules here:{\" \"}\n                <button\n                  className=\"bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded\"\n                  onClick={this.handlePasteClick.bind(this)}\n                >\n                  Paste\n                </button>\n                {jdkVersion &&\n                <span className=\"text-xs text-green font-bold\">{\" \"}JDK {jdkVersion} ✓</span>}\n              </p>\n            </li>\n            <li>\n              <p>\n                4.{\" \"}\n                <a href=\"#0\" onClick={this.handleCopyButtonClick.bind(this)}>\n                  Copy\n                </a>{\" \"}\n                the below{\" \"}\n                <code className=\"font-mono roman border inline-block\">\n                  jlink\n                </code>{\" \"}\n                command and run it in the{\" \"}\n                <code className=\"font-mono roman border inline-block\">bin</code>{\" \"}\n                directory of the JDK\n              </p>\n              <h3>\n                Create your{\" \"}\n                {selectedVendor.organization + \" \" + selectedVendor.product}{\" \"}\n                OpenJDK JRE using the{\" \"}\n                <code className=\"font-mono roman border inline-block\">\n                  jlink\n                </code>{\" \"}\n                command below:\n              </h3>\n              <textarea\n                id=\"jlink-command-textarea\"\n                value={jlinkCommand}\n                readOnly\n                cols=\"80\"\n                rows=\"8\"\n                className=\"rounded shadow border font-mono text-xs\"\n                onClick={this.handleJlinkCommandTextareaClick}\n              />\n              <button\n                onClick={this.handleCopyButtonClick.bind(this)}\n                className=\"no-underline bg-transparent hover:bg-blue text-blue-dark font-semibold hover:text-white py-1 px-4 border border-blue hover:border-transparent rounded\"\n              >\n                Copy\n              </button>\n            </li>\n            <li>\n              Your JRE is in the{\" \"}\n              <code className=\"font-mono roman border inline-block\">\n                {jreFolderName}\n              </code>{\" \"}\n              folder of your current working directory!\n            </li>\n          </ol>\n          <h3>\n            Customize Your{\" \"}\n            {selectedVendor.organization + \" \" + selectedVendor.product} JRE\n          </h3>\n          <p className=\"text-sm italic\">\n            The JDK comes with many root modules which contain the JDK core\n            classes. The modules prefixed with{\" \"}\n            <code className=\"font-mono roman border inline-block\">jdk.</code>{\" \"}\n            are typically not needed for a production JRE. Below, all non-JDK\n            modules have been included in the JRE. This will get you up and\n            running quickly without needing to use an entire JDK.\n          </p>\n          <p className=\"text-sm italic\">\n            Free to exclude or include any modules you might need. For instance,\n            you can use the{\" \"}\n            <code className=\"font-mono roman border inline-block\">jdeps</code>{\" \"}\n            command on your Java classes to narrow down which modules you\n            actually need to include.\n          </p>\n          <p className=\"text-sm italic\">\n            There is another section below for adding your own custom modules to\n            the JRE.\n          </p>\n          {jdkVersion !== \"\" && (\n            <>\n              <h4>Included JDK Root Modules:</h4>\n              <div>\n                <select\n                  id=\"jre-included-modules\"\n                  size=\"8\"\n                  className=\"rounded shadow border\"\n                >\n                  {includedModulesOptionArray}\n                </select>\n                <button\n                  className=\"bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded\"\n                  onClick={this.handleExcludeClick.bind(this)}\n                >\n                  Exclude &darr;\n                </button>\n              </div>\n              <h4>Excluded JDK Root Modules:</h4>\n              <div>\n                <select\n                  id=\"jre-excluded-modules\"\n                  size=\"8\"\n                  className=\"rounded shadow border\"\n                >\n                  {excludedModulesOptionArray}\n                </select>\n                <button\n                  className=\"bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded\"\n                  onClick={this.handleIncludeClick.bind(this)}\n                >\n                  Include &uarr;\n                </button>\n              </div>\n            </>\n          )}\n          {!jdkVersion &&\n            <>\n            <div className=\"font-bold border p-1 inline-block\">Please paste your JDK modules above to customize which root modules are included in the JRE.</div>\n            </>\n          }\n          <div>\n            <p className=\"text-sm italic\">\n              Add any custom modules you'd like added to the set of root modules\n              included above. Comma-separate the values and don't use spaces.\n            </p>\n            <label htmlFor=\"additional-modules\">Custom Modules: </label>\n            <input\n              id=\"additional-modules\"\n              type=\"text\"\n              value=\"\"\n              placeholder=\"my.mod,other.mod,etc\"\n              value={optionAdditionalModules}\n              className=\"shadow appearance-none border rounded py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline\"\n              onChange={this.handleAdditionalModulesChange.bind(this)}\n            />\n          </div>\n          <div>\n            <p className=\"text-sm italic\">\n              The module path is a semicolon-separated list of paths where{\" \"}\n              <code className=\"font-mono roman border inline-block\">jlink</code>{\" \"}\n              will search for modules. They can be relative or absolute, and can\n              use environment variables. If you run{\" \"}\n              <code className=\"font-mono roman border inline-block\">jlink</code>{\" \"}\n              from{\" \"}\n              <code className=\"font-mono roman border inline-block\">bin</code>,\n              then{\" \"}\n              <code className=\"font-mono roman border inline-block\">..</code>{\" \"}\n              will resolve to the base JDK directory. JDK modules are typically\n              in the JDK directory{\" \"}\n              <code className=\"font-mono roman border inline-block\">jmods</code>\n              .\n            </p>\n            <label htmlFor=\"module-path\">Module Path: </label>\n            <input\n              id=\"module-path\"\n              type=\"text\"\n              value={optionModulePath}\n              className=\"shadow appearance-none border rounded py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline\"\n              onChange={this.handleModulePathChange.bind(this)}\n            />\n          </div>\n          <div>\n            <p className=\"text-sm italic\">\n              Choose the level of compression. ZIP compression offers a\n              significant reduction in size with a small hit to class loading\n              performance.\n            </p>\n            <label\n              htmlFor=\"compression\"\n              title=\"Enable compression of resources\"\n            >\n              Compression:{\" \"}\n            </label>\n            <select\n              id=\"compression\"\n              value={optionCompressionType}\n              title=\"Enable compression of resources\"\n              className=\"rounded shadow border\"\n              onChange={this.handleCompressionChange.bind(this)}\n            >\n              <option value=\"0\">No compression</option>\n              <option value=\"1\">Constant string sharing</option>\n              <option value=\"2\">ZIP</option>\n            </select>\n          </div>\n          <div>\n            <p className=\"text-sm italic\">\n              Whether or not to exclude header files from the JRE.\n            </p>\n            <label htmlFor=\"headers-excluded\">Exclude Header Files </label>\n            <input\n              id=\"headers-excluded\"\n              type=\"checkbox\"\n              checked={optionExcludeHeaderFiles}\n              onChange={this.handleExcludeHeaderFilesChange.bind(this)}\n            />\n          </div>\n          <div>\n            <p className=\"text-sm italic\">\n              Whether or not to exclude man pages from the JRE.\n            </p>\n            <label htmlFor=\"man-pages-excluded\">Exclude Man Pages </label>\n            <input\n              id=\"man-pages-excluded\"\n              type=\"checkbox\"\n              checked={optionExcludeManPages}\n              onChange={this.handleExcludeManPagesChange.bind(this)}\n            />\n          </div>\n          <div>\n            <p className=\"text-sm italic\">\n              Whether or not to link service provider modules and their\n              dependencies.\n            </p>\n            <label\n              htmlFor=\"bind-services\"\n              title=\"Link service provider modules and their dependencies.\"\n            >\n              Bind Services{\" \"}\n            </label>\n            <input\n              id=\"bind-services\"\n              type=\"checkbox\"\n              title=\"Link service provider modules and their dependencies.\"\n              checked={optionBindServices}\n              onChange={this.handleBindServicesChange.bind(this)}\n            />\n          </div>\n          <div>\n            <p className=\"text-sm italic\">\n              The path to the{\" \"}\n              <code className=\"font-mono roman border inline-block\">bin</code>{\" \"}\n              folder of your JDK. You can use an environment variable here, but\n              it's safer to execute{\" \"}\n              <code className=\"font-mono roman border inline-block\">jlink</code>{\" \"}\n              directly from the {selectedVendor.product} JDK{\" \"}\n              <code className=\"font-mono roman border inline-block\">bin</code>{\" \"}\n              to prevent using an incorrect JDK that might be on your{\" \"}\n              <code className=\"font-mono roman border inline-block\">PATH</code>.\n              The safest way is to leave this as{\" \"}\n              <code className=\"font-mono roman border inline-block\">.</code>,\n              navigate to the{\" \"}\n              <code className=\"font-mono roman border inline-block\">bin</code>{\" \"}\n              directory, and run the{\" \"}\n              <code className=\"font-mono roman border inline-block\">jlink</code>{\" \"}\n              command copied from above. If you change this, be sure to also\n              change the Module Path above.\n            </p>\n            <label htmlFor=\"jdk-bin-path\">JDK Bin Path: </label>\n            <input\n              id=\"jdk-bin-path\"\n              type=\"text\"\n              value={optionJdkBinPath}\n              className=\"shadow appearance-none border rounded py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline\"\n              onChange={this.handleJdkBinPathChange.bind(this)}\n            />\n          </div>\n        </div>\n        <footer className=\"text-center py-4 mt-2 bg-grey-lighter text-sm\">\n          Copyright &copy; {new Date().getFullYear()}{\" \"}\n          <a href=\"https://github.com/justinmahar\">Justin Mahar</a> &bull;{\" \"}\n          <a href=\"https://opensource.org/licenses/MIT\">MIT License</a> &bull;{\" \"}\n          <a href=\"https://github.com/justinmahar/easyjre\">EasyJRE on GitHub</a>{\" \"}\n          &bull; Coffee Icon By{\" \"}\n          <a href=\"https://feathericons.com/\">FeatherIcons</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}